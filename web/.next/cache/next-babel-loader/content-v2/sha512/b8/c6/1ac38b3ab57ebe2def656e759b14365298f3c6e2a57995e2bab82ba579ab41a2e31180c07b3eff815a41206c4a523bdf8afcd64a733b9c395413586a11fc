{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/DirectMessageContainer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, Stack, Text } from '@chakra-ui/react';\nimport React, { useEffect } from 'react';\nimport { NewDirectMessageDocument, useDirectMessageQuery } from '../generated/graphql';\nexport var DirectMessage = function DirectMessage(_ref) {\n  _s();\n\n  var teamId = _ref.teamId,\n      receiverId = _ref.receiverId;\n\n  var _useDirectMessageQuer = useDirectMessageQuery({\n    variables: {\n      receiverId: receiverId,\n      teamId: teamId\n    },\n    fetchPolicy: 'network-only'\n  }),\n      data = _useDirectMessageQuer.data,\n      loading = _useDirectMessageQuer.loading,\n      subscribeToMore = _useDirectMessageQuer.subscribeToMore;\n\n  useEffect(function () {\n    // this starts the subscription\n    var unsubscribe = subscribeToMore({\n      document: NewDirectMessageDocument,\n      variables: {\n        receiverId: receiverId,\n        teamId: teamId\n      },\n      updateQuery: function updateQuery(prev, _ref2) {\n        var subscriptionData = _ref2.subscriptionData;\n\n        if (!subscriptionData.data) {\n          return prev;\n        } //@ts-ignore\n\n\n        var newDirectMessage = subscriptionData.data.newDirectMessage;\n        console.log(newDirectMessage); // prev is a data with __typename and Message\n\n        var newData = _objectSpread(_objectSpread({}, prev), {}, {\n          Messages: [].concat(_toConsumableArray(prev.DirectMessages), [newDirectMessage])\n        });\n\n        return newData;\n      }\n    });\n\n    if (unsubscribe) {\n      return function () {\n        return unsubscribe();\n      }; // this function will execute when the component gets disassociated.\n    }\n  }, [subscribeToMore, receiverId, teamId]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    gridColumn: \"3\",\n    gridRow: \"2\",\n    backgroundColor: \"#e6e6e6\",\n    overflowY: \"auto\",\n    display: \"flex\",\n    flexDirection: \"column-reverse\",\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      mt: 4,\n      ml: 3,\n      children: data !== null && data !== void 0 && data.DirectMessages ? data.DirectMessages.map(function (u) {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          mb: 4,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            fontSize: \"19px\",\n            fontFamily: \"sans-serif\",\n            fontWeight: \"bold\",\n            children: [u.sender.username, /*#__PURE__*/_jsxDEV(Text, {\n              ml: 2,\n              display: \"inline\",\n              fontSize: \"13px\",\n              fontFamily: \"sans-serif\",\n              color: \"#958993\",\n              children: u.createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            children: u.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, _this)]\n        }, \"directMessage-\".concat(u.id), true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, _this);\n      }) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(DirectMessage, \"WNGdDFmDDyOkn0GFJWkc8IcG6Bo=\", false, function () {\n  return [useDirectMessageQuery];\n});\n\n_c = DirectMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DirectMessage\");","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/DirectMessageContainer.tsx"],"names":["Box","Stack","Text","React","useEffect","NewDirectMessageDocument","useDirectMessageQuery","DirectMessage","teamId","receiverId","variables","fetchPolicy","data","loading","subscribeToMore","unsubscribe","document","updateQuery","prev","subscriptionData","newDirectMessage","console","log","newData","Messages","DirectMessages","map","u","sender","username","createdAt","text","id"],"mappings":"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","sourcesContent":["import { Box, Stack, Text } from '@chakra-ui/react'\nimport React, { useEffect } from 'react'\nimport {\n  NewDirectMessageDocument,\n  useDirectMessageQuery,\n} from '../generated/graphql'\n\ninterface MessageProps {\n  teamId: number\n  receiverId: number\n}\n\nexport const DirectMessage: React.FC<MessageProps> = ({\n  teamId,\n  receiverId,\n}) => {\n  const { data, loading, subscribeToMore } = useDirectMessageQuery({\n    variables: {\n      receiverId,\n      teamId,\n    },\n    fetchPolicy: 'network-only',\n  })\n\n  useEffect(() => {\n    // this starts the subscription\n    let unsubscribe = subscribeToMore({\n      document: NewDirectMessageDocument,\n      variables: { receiverId, teamId },\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) {\n          return prev\n        }\n        //@ts-ignore\n        const { newDirectMessage } = subscriptionData.data\n        console.log(newDirectMessage)\n        // prev is a data with __typename and Message\n        let newData = {\n          ...prev,\n          Messages: [...prev.DirectMessages, newDirectMessage],\n        }\n        return newData\n      },\n    })\n    if (unsubscribe) {\n      return () => unsubscribe() // this function will execute when the component gets disassociated.\n    }\n  }, [subscribeToMore, receiverId, teamId])\n  if (loading) {\n    return <Box>loading</Box>\n  }\n  return (\n    <Box\n      gridColumn=\"3\"\n      gridRow=\"2\"\n      backgroundColor=\"#e6e6e6\"\n      overflowY=\"auto\"\n      display=\"flex\"\n      flexDirection=\"column-reverse\"\n    >\n      <Stack mt={4} ml={3}>\n        {/* column-reverse: to have new messages in the front\n        overFlowY: for scroll bar */}\n        {data?.DirectMessages\n          ? data.DirectMessages.map((u) => (\n              <Box mb={4} key={`directMessage-${u.id}`}>\n                <Box fontSize=\"19px\" fontFamily=\"sans-serif\" fontWeight=\"bold\">\n                  {u.sender.username}\n                  <Text\n                    ml={2}\n                    display=\"inline\"\n                    fontSize=\"13px\"\n                    fontFamily=\"sans-serif\"\n                    color=\"#958993\"\n                  >\n                    {u.createdAt}\n                  </Text>\n                </Box>\n                <Box>{u.text}</Box>\n              </Box>\n            ))\n          : null}\n      </Stack>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}