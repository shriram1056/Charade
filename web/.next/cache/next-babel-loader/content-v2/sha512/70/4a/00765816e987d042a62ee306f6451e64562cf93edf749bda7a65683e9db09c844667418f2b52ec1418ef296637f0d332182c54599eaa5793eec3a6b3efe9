{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/channelForm.tsx\";\nimport { Button, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from '@chakra-ui/react';\nimport { Formik } from 'formik';\nimport React from 'react';\nexport const ChannelForm = ({\n  open,\n  toClose\n}) => {\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: toClose,\n    isOpen: open,\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {\n      opacity: \"0.2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      pb: 5,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Add Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            name: ''\n          },\n          onSubmit: async (values, {\n            setErrors\n          }) => {\n            console.log(values);\n          },\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            margin: \"10px auto 0 auto\",\n            display: \"block\",\n            backgroundColor: \"teal.300\",\n            children: \"Create Channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/channelForm.tsx"],"names":["Button","Input","Modal","ModalBody","ModalCloseButton","ModalContent","ModalHeader","ModalOverlay","Formik","React","ChannelForm","open","toClose","name","values","setErrors","console","log"],"mappings":";;AAAA,SACEA,MADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,gBALF,EAMEC,YANF,EAOEC,WAPF,EAQEC,YARF,QASO,kBATP;AAUA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,OAAO,MAAMC,WAAkC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACvE,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,OAAhB;AAAyB,IAAA,MAAM,EAAED,IAAjC;AAAA,4BAEE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,EAAE,EAAE,CAAlB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,aAAa,EAAE;AAAEE,YAAAA,IAAI,EAAE;AAAR,WADjB;AAEE,UAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,YAAAA;AAAF,WAAf,KAAiC;AACzCC,YAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,WAJH;AAAA,kCAME,QAAC,KAAD;AAAO,YAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,MAAD;AACE,YAAA,MAAM,EAAC,kBADT;AAEE,YAAA,OAAO,EAAC,OAFV;AAGE,YAAA,eAAe,EAAC,UAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA5BM","sourcesContent":["import {\n  Button,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n} from '@chakra-ui/react'\nimport { Formik } from 'formik'\nimport React from 'react'\ninterface Channelform {\n  open: boolean\n  toClose: any\n}\nexport const ChannelForm: React.FC<Channelform> = ({ open, toClose }) => {\n  return (\n    <Modal onClose={toClose} isOpen={open}>\n      {/*  on Close needs callback and not run toOpen() */}\n      <ModalOverlay opacity=\"0.2\" />\n      <ModalContent pb={5}>\n        <ModalHeader>Add Channel</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Formik\n            initialValues={{ name: '' }}\n            onSubmit={async (values, { setErrors }) => {\n              console.log(values)\n            }}\n          >\n            <Input placeholder=\"channel\" />\n            <Button\n              margin=\"10px auto 0 auto\"\n              display=\"block\"\n              backgroundColor=\"teal.300\"\n            >\n              Create Channel\n            </Button>\n          </Formik>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}