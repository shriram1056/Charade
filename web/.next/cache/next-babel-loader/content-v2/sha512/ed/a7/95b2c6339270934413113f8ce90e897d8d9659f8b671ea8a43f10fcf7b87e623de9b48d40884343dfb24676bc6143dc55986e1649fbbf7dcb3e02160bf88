{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/SendMessage.tsx\",\n    _this = this;\n\nimport { Box, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport React from 'react';\nimport { InputField } from './InputField';\nvar ENTER_KEY = 13;\nexport var SendMessage = function SendMessage(_ref) {\n  var name = _ref.name,\n      handleSubmit = _ref.handleSubmit;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    gridColumn: \"3\",\n    gridRow: \"3\",\n    backgroundColor: \"#e6e6e6\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        message: ''\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var setErrors, setSubmitting;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref2.setErrors, setSubmitting = _ref2.setSubmitting;\n\n                  if (!(!values.message || !values.message.trim())) {\n                    _context.next = 4;\n                    break;\n                  }\n\n                  //trim to remove the white spaces\n                  setSubmitting(false);\n                  return _context.abrupt(\"return\");\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref4) {\n        var isSubmitting = _ref4.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            padding: \"20px\",\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              placeholder: \"message-\".concat(name),\n              channel: true,\n              name: \"message\",\n              backgroundColor: \"#bfbfbf\",\n              _placeholder: {\n                color: 'black'\n              },\n              onKeyDown: function onKeyDown(e) {\n                if (e.keyCode === ENTER_KEY && !isSubmitting) {}\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              backgroundColor: \"black\",\n              color: \"white\",\n              isLoading: isSubmitting //     onClick={isSubmitting ? null : toClose}\n              ,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n_c = SendMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendMessage\");","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/SendMessage.tsx"],"names":["Box","Button","Form","Formik","React","InputField","ENTER_KEY","SendMessage","name","handleSubmit","message","values","setErrors","setSubmitting","trim","isSubmitting","color","e","keyCode"],"mappings":";;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAKA,IAAMC,SAAS,GAAG,EAAlB;AACA,OAAO,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAGjD;AAAA,MAFJC,IAEI,QAFJA,IAEI;AAAA,MADJC,YACI,QADJA,YACI;AACJ,sBACE,QAAC,GAAD;AAAK,IAAA,UAAU,EAAC,GAAhB;AAAoB,IAAA,OAAO,EAAC,GAA5B;AAAgC,IAAA,eAAe,EAAC,SAAhD;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADjB;AAEE,MAAA,QAAQ;AAAA,6EAAE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,kBAAAA,SAAjB,SAAiBA,SAAjB,EAA4BC,aAA5B,SAA4BA,aAA5B;;AAAA,wBACJ,CAACF,MAAM,CAACD,OAAR,IAAmB,CAACC,MAAM,CAACD,OAAP,CAAeI,IAAf,EADhB;AAAA;AAAA;AAAA;;AAEN;AACAD,kBAAAA,aAAa,CAAC,KAAD,CAAb;AAHM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAFV;AAAA,gBAUG;AAAA,YAAGE,YAAH,SAAGA,YAAH;AAAA,4BACC,QAAC,IAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,OAAO,EAAC,MAAb;AAAoB,YAAA,OAAO,EAAC,MAA5B;AAAA,oCACE,QAAC,UAAD;AACE,cAAA,WAAW,oBAAaP,IAAb,CADb;AAEE,cAAA,OAAO,EAAE,IAFX;AAGE,cAAA,IAAI,EAAC,SAHP;AAIE,cAAA,eAAe,EAAC,SAJlB;AAKE,cAAA,YAAY,EAAE;AAAEQ,gBAAAA,KAAK,EAAE;AAAT,eALhB;AAME,cAAA,SAAS,EAAE,mBAACC,CAAD,EAAO;AAChB,oBAAIA,CAAC,CAACC,OAAF,KAAcZ,SAAd,IAA2B,CAACS,YAAhC,EAA8C,CAC7C;AACF;AATH;AAAA;AAAA;AAAA;AAAA,qBADF,eAYE,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,eAAe,EAAC,OAFlB;AAGE,cAAA,KAAK,EAAC,OAHR;AAIE,cAAA,SAAS,EAAEA,YAJb,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADD;AAAA;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAyCD,CA7CM;KAAMR,W","sourcesContent":["import { Box, Button } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport React from 'react'\nimport { InputField } from './InputField'\n\ninterface SendMessageProps {\n  name: string\n}\nconst ENTER_KEY = 13\nexport const SendMessage: React.FC<SendMessageProps> = ({\n  name,\n  handleSubmit,\n}) => {\n  return (\n    <Box gridColumn=\"3\" gridRow=\"3\" backgroundColor=\"#e6e6e6\">\n      <Formik\n        initialValues={{ message: '' }}\n        onSubmit={async (values, { setErrors, setSubmitting }) => {\n          if (!values.message || !values.message.trim()) {\n            //trim to remove the white spaces\n            setSubmitting(false)\n            return\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Box display=\"flex\" padding=\"20px\">\n              <InputField\n                placeholder={`message-${name}`}\n                channel={true}\n                name=\"message\"\n                backgroundColor=\"#bfbfbf\"\n                _placeholder={{ color: 'black' }}\n                onKeyDown={(e) => {\n                  if (e.keyCode === ENTER_KEY && !isSubmitting) {\n                  }\n                }}\n              />\n              <Button\n                type=\"submit\"\n                backgroundColor=\"black\"\n                color=\"white\"\n                isLoading={isSubmitting}\n                //     onClick={isSubmitting ? null : toClose}\n              >\n                Send\n              </Button>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}