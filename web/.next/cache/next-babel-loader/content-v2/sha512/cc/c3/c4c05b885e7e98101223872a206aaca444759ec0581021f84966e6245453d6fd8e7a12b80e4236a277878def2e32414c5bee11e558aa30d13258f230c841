{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/pages/create-team.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport { useRouter } from 'next/dist/client/router';\nimport React from 'react';\nimport { InputField } from '../components/InputField';\nimport { Wrapper } from '../components/Wrapper';\nimport { useCreateTeamMutation } from '../generated/graphql';\nimport { toErrorMap } from '../utils/toErrorMap';\nimport { withApollo } from '../utils/withApollo';\n\nvar CreateTeam = function CreateTeam(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n\n  var _useCreateTeamMutatio = useCreateTeamMutation(),\n      _useCreateTeamMutatio2 = _slicedToArray(_useCreateTeamMutatio, 1),\n      createTeam = _useCreateTeamMutatio2[0];\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: ''\n      },\n      onSubmit: /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n          var setErrors, _response$data, _response$data2, response;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setErrors = _ref2.setErrors;\n                  _context.prev = 1;\n                  _context.next = 4;\n                  return createTeam({\n                    variables: {\n                      name: values.name\n                    }\n                  });\n\n                case 4:\n                  response = _context.sent;\n\n                  if ((_response$data = response.data) !== null && _response$data !== void 0 && _response$data.createTeam.errors) {\n                    console.log(toErrorMap(response.data.createTeam.errors));\n                    setErrors(toErrorMap(response.data.createTeam.errors));\n                  } else if ((_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.createTeam.team) {\n                    router.push('/');\n                  }\n\n                  _context.next = 11;\n                  break;\n\n                case 8:\n                  _context.prev = 8;\n                  _context.t0 = _context[\"catch\"](1);\n                  router.push('login');\n\n                case 11:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, null, [[1, 8]]);\n        }));\n\n        return function (_x, _x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }(),\n      children: function children(_ref4) {\n        var isSubmitting = _ref4.isSubmitting;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            children: /*#__PURE__*/_jsxDEV(InputField, {\n              name: \"name\",\n              placeholder: \"name\",\n              label: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            mt: 4,\n            type: \"submit\",\n            colorScheme: \"teal\",\n            isLoading: isSubmitting // show loading if is still submitting\n            ,\n            children: \"login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(CreateTeam, \"alvuOyeV+Nx5OBH2zGLwoRVVBsY=\", false, function () {\n  return [useRouter, useCreateTeamMutation];\n});\n\n_c = CreateTeam;\nexport default withApollo({\n  ssr: false\n})(CreateTeam);\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateTeam\");","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/pages/create-team.tsx"],"names":["Box","Button","Form","Formik","useRouter","React","InputField","Wrapper","useCreateTeamMutation","toErrorMap","withApollo","CreateTeam","router","createTeam","name","values","setErrors","variables","response","data","errors","console","log","team","push","isSubmitting","ssr"],"mappings":";;;;;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,IAAMC,UAAwB,GAAG,SAA3BA,UAA2B,OAAQ;AAAA;;AAAA;;AACvC,MAAMC,MAAM,GAAGR,SAAS,EAAxB;;AADuC,8BAElBI,qBAAqB,EAFH;AAAA;AAAA,MAEhCK,UAFgC;;AAGvC,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADjB;AAEE,MAAA,QAAQ;AAAA,6EAAE,iBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAiBC,kBAAAA,SAAjB,SAAiBA,SAAjB;AAAA;AAAA;AAAA,yBAEiBH,UAAU,CAAC;AAChCI,oBAAAA,SAAS,EAAE;AACTH,sBAAAA,IAAI,EAAEC,MAAM,CAACD;AADJ;AADqB,mBAAD,CAF3B;;AAAA;AAEAI,kBAAAA,QAFA;;AAON,wCAAIA,QAAQ,CAACC,IAAb,2CAAI,eAAeN,UAAf,CAA0BO,MAA9B,EAAsC;AACpCC,oBAAAA,OAAO,CAACC,GAAR,CAAYb,UAAU,CAACS,QAAQ,CAACC,IAAT,CAAcN,UAAd,CAAyBO,MAA1B,CAAtB;AACAJ,oBAAAA,SAAS,CAACP,UAAU,CAACS,QAAQ,CAACC,IAAT,CAAcN,UAAd,CAAyBO,MAA1B,CAAX,CAAT;AACD,mBAHD,MAGO,uBAAIF,QAAQ,CAACC,IAAb,4CAAI,gBAAeN,UAAf,CAA0BU,IAA9B,EAAoC;AACzCX,oBAAAA,MAAM,CAACY,IAAP,CAAY,GAAZ;AACD;;AAZK;AAAA;;AAAA;AAAA;AAAA;AAcNZ,kBAAAA,MAAM,CAACY,IAAP,CAAY,OAAZ;;AAdM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;AAAA,SAFV;AAAA,gBAqBG;AAAA,YAAGC,YAAH,SAAGA,YAAH;AAAA,4BACC,QAAC,IAAD;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACE,QAAC,UAAD;AAAY,cAAA,IAAI,EAAC,MAAjB;AAAwB,cAAA,WAAW,EAAC,MAApC;AAA2C,cAAA,KAAK,EAAC;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE,QAAC,MAAD;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,WAAW,EAAC,MAHd;AAIE,YAAA,SAAS,EAAEA,YAJb,CAI2B;AAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD;AAAA;AArBH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAyCD,CA5CD;;GAAMd,U;UACWP,S,EACMI,qB;;;KAFjBG,U;AA6CN,eAAeD,UAAU,CAAC;AAAEgB,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2Bf,UAA3B,CAAf","sourcesContent":["import { Box, Button } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport { useRouter } from 'next/dist/client/router'\nimport React from 'react'\nimport { InputField } from '../components/InputField'\nimport { Wrapper } from '../components/Wrapper'\nimport { useCreateTeamMutation } from '../generated/graphql'\nimport { toErrorMap } from '../utils/toErrorMap'\nimport { withApollo } from '../utils/withApollo'\n\nconst CreateTeam: React.FC<{}> = ({}) => {\n  const router = useRouter()\n  const [createTeam] = useCreateTeamMutation()\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ name: '' }}\n        onSubmit={async (values, { setErrors }) => {\n          try {\n            const response = await createTeam({\n              variables: {\n                name: values.name,\n              },\n            })\n            if (response.data?.createTeam.errors) {\n              console.log(toErrorMap(response.data.createTeam.errors))\n              setErrors(toErrorMap(response.data.createTeam.errors))\n            } else if (response.data?.createTeam.team) {\n              router.push('/')\n            }\n          } catch (err) {\n            router.push('login')\n          }\n          // console.log(response.errors[0].message)\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Box mt={4}>\n              <InputField name=\"name\" placeholder=\"name\" label=\"name\" />\n            </Box>\n            <Button\n              mt={4}\n              type=\"submit\"\n              colorScheme=\"teal\"\n              isLoading={isSubmitting} // show loading if is still submitting\n            >\n              login\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  )\n}\nexport default withApollo({ ssr: false })(CreateTeam)\n"]},"metadata":{},"sourceType":"module"}