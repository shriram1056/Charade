{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/container/Sidebar.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useDisclosure } from '@chakra-ui/react';\nimport React from 'react';\nimport { Channel } from '../components/channel';\nimport { ChannelForm } from '../components/channelForm';\nimport { InvitePeople } from '../components/InvitePeople';\nimport { Team as Teams } from '../components/team';\nimport { useMeQuery } from '../generated/graphql';\nexport var Sidebar = function Sidebar(_ref) {\n  _s();\n\n  var AllTeams = _ref.AllTeams,\n      Team = _ref.Team;\n\n  var _useDisclosure = useDisclosure(),\n      isOpen = _useDisclosure.isOpen,\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose; // open and close modal\n\n\n  var _useDisclosure2 = useDisclosure(),\n      Open = _useDisclosure2.isOpen,\n      toOpen = _useDisclosure2.onOpen,\n      Close = _useDisclosure2.onClose;\n\n  var _useMeQuery = useMeQuery(),\n      data = _useMeQuery.data,\n      loading = _useMeQuery.loading;\n\n  if (data) {\n    var _isOwner = data.me.id === Team.ownerId;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Teams, {\n      gridColumn: \"1\",\n      gridRow: \"1 / 4\",\n      bg: \"#362234\",\n      color: \"#958993\",\n      teams: AllTeams.map(function (t) {\n        return {\n          id: t.id,\n          name: t.name.charAt(0).toUpperCase()\n        };\n      }) // map return a new array\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Channel, {\n      onInvite: toOpen,\n      gridColumn: \"2\",\n      gridRow: \"1 / 4\",\n      bg: \"#4e3a4c\",\n      color: \"#958993\",\n      teamName: Team.name,\n      username: data.me.username,\n      channels: Team.channels,\n      teamId: Team.id,\n      users: null,\n      toOpen: onOpen,\n      isOwner: isOwner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ChannelForm, {\n      open: isOpen,\n      toClose: onClose,\n      teamId: Team.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(InvitePeople, {\n      open: Open,\n      toClose: Close,\n      teamId: Team.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Sidebar, \"mC/D/+ukaT0AolgfgjI+XdgBpJY=\", false, function () {\n  return [useDisclosure, useDisclosure, useMeQuery];\n});\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/container/Sidebar.tsx"],"names":["useDisclosure","React","Channel","ChannelForm","InvitePeople","Team","Teams","useMeQuery","Sidebar","AllTeams","isOpen","onOpen","onClose","Open","toOpen","Close","data","loading","isOwner","me","id","ownerId","map","t","name","charAt","toUpperCase","username","channels"],"mappings":";;;;;;;AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,oBAA9B;AACA,SAAuBC,UAAvB,QAAyC,sBAAzC;AAMA,OAAO,IAAMC,OAA+B,GAAG,SAAlCA,OAAkC,OAAwB;AAAA;;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXJ,IAAW,QAAXA,IAAW;;AAAA,uBACjCL,aAAa,EADoB;AAAA,MAC7DU,MAD6D,kBAC7DA,MAD6D;AAAA,MACrDC,MADqD,kBACrDA,MADqD;AAAA,MAC7CC,OAD6C,kBAC7CA,OAD6C,EACjB;;;AADiB,wBAEZZ,aAAa,EAFD;AAAA,MAErDa,IAFqD,mBAE7DH,MAF6D;AAAA,MAEvCI,MAFuC,mBAE/CH,MAF+C;AAAA,MAEtBI,KAFsB,mBAE/BH,OAF+B;;AAAA,oBAG3CL,UAAU,EAHiC;AAAA,MAG7DS,IAH6D,eAG7DA,IAH6D;AAAA,MAGvDC,OAHuD,eAGvDA,OAHuD;;AAIrE,MAAID,IAAJ,EAAU;AACR,QAAIE,QAAO,GAAGF,IAAI,CAACG,EAAL,CAAQC,EAAR,KAAef,IAAI,CAACgB,OAAlC;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,UAAU,EAAC,GADb;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,EAAE,EAAC,SAHL;AAIE,MAAA,KAAK,EAAC,SAJR;AAKE,MAAA,KAAK,EAAEZ,QAAQ,CAACa,GAAT,CAAa,UAACC,CAAD;AAAA,eAAQ;AAC1BH,UAAAA,EAAE,EAAEG,CAAC,CAACH,EADoB;AAE1BI,UAAAA,IAAI,EAAED,CAAC,CAACC,IAAF,CAAOC,MAAP,CAAc,CAAd,EAAiBC,WAAjB;AAFoB,SAAR;AAAA,OAAb,CALT,CAQO;;AARP;AAAA;AAAA;AAAA;AAAA,aADF,eAYE,QAAC,OAAD;AACE,MAAA,QAAQ,EAAEZ,MADZ;AAEE,MAAA,UAAU,EAAC,GAFb;AAGE,MAAA,OAAO,EAAC,OAHV;AAIE,MAAA,EAAE,EAAC,SAJL;AAKE,MAAA,KAAK,EAAC,SALR;AAME,MAAA,QAAQ,EAAET,IAAI,CAACmB,IANjB;AAOE,MAAA,QAAQ,EAAER,IAAI,CAACG,EAAL,CAAQQ,QAPpB;AAQE,MAAA,QAAQ,EAAEtB,IAAI,CAACuB,QARjB;AASE,MAAA,MAAM,EAAEvB,IAAI,CAACe,EATf;AAUE,MAAA,KAAK,EAAE,IAVT;AAWE,MAAA,MAAM,EAAET,MAXV;AAYE,MAAA,OAAO,EAAEO;AAZX;AAAA;AAAA;AAAA;AAAA,aAZF,eA0BE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAER,MAAnB;AAA2B,MAAA,OAAO,EAAEE,OAApC;AAA6C,MAAA,MAAM,EAAEP,IAAI,CAACe;AAA1D;AAAA;AAAA;AAAA;AAAA,aA1BF,eA2BE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEP,IAApB;AAA0B,MAAA,OAAO,EAAEE,KAAnC;AAA0C,MAAA,MAAM,EAAEV,IAAI,CAACe;AAAvD;AAAA;AAAA;AAAA;AAAA,aA3BF;AAAA,kBADF;AA+BD,CAtCM;;GAAMZ,O;UACyBR,a,EACqBA,a,EAC/BO,U;;;KAHfC,O","sourcesContent":["import { useDisclosure } from '@chakra-ui/react'\nimport React from 'react'\nimport { Channel } from '../components/channel'\nimport { ChannelForm } from '../components/channelForm'\nimport { InvitePeople } from '../components/InvitePeople'\nimport { Team as Teams } from '../components/team'\nimport { Team as team, useMeQuery } from '../generated/graphql'\n\ninterface SidebarProps {\n  AllTeams: team[]\n  Team: team\n}\nexport const Sidebar: React.FC<SidebarProps> = ({ AllTeams, Team }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure() // open and close modal\n  const { isOpen: Open, onOpen: toOpen, onClose: Close } = useDisclosure()\n  const { data, loading } = useMeQuery()\n  if (data) {\n    let isOwner = data.me.id === Team.ownerId\n  }\n  return (\n    <>\n      <Teams\n        gridColumn=\"1\"\n        gridRow=\"1 / 4\"\n        bg=\"#362234\"\n        color=\"#958993\"\n        teams={AllTeams.map((t) => ({\n          id: t.id,\n          name: t.name.charAt(0).toUpperCase(),\n        }))} // map return a new array\n      />\n\n      <Channel\n        onInvite={toOpen}\n        gridColumn=\"2\"\n        gridRow=\"1 / 4\"\n        bg=\"#4e3a4c\"\n        color=\"#958993\"\n        teamName={Team.name}\n        username={data.me.username}\n        channels={Team.channels}\n        teamId={Team.id}\n        users={null}\n        toOpen={onOpen}\n        isOwner={isOwner}\n      />\n      <ChannelForm open={isOpen} toClose={onClose} teamId={Team.id} />\n      <InvitePeople open={Open} toClose={Close} teamId={Team.id} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}