{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/SendMessage.tsx\";\nimport { Box, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport React from 'react';\nimport { File } from './FileUpload';\nimport { InputField } from './InputField';\nconst ENTER_KEY = 13;\nexport const SendMessage = ({\n  name,\n  onSubmit\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    gridColumn: \"3\",\n    gridRow: \"3\",\n    backgroundColor: \"#e6e6e6\",\n    display: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(File, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        message: ''\n      },\n      onSubmit: async (values, {\n        setErrors,\n        setSubmitting,\n        resetForm\n      }) => {\n        if (!values.message || !values.message.trim()) {\n          //trim to remove the white spaces\n          setSubmitting(false);\n          return;\n        }\n\n        const response = onSubmit(values.message);\n        resetForm();\n      },\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          padding: \"20px\",\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            placeholder: `message-${name}`,\n            channel: true,\n            name: \"message\",\n            backgroundColor: \"#bfbfbf\",\n            _placeholder: {\n              color: 'black'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            backgroundColor: \"black\",\n            color: \"white\",\n            isLoading: isSubmitting //     onClick={isSubmitting ? null : toClose}\n            ,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/SendMessage.tsx"],"names":["Box","Button","Form","Formik","React","File","InputField","ENTER_KEY","SendMessage","name","onSubmit","message","values","setErrors","setSubmitting","resetForm","trim","response","isSubmitting","color"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAKA,MAAMC,SAAS,GAAG,EAAlB;AAEA,OAAO,MAAMC,WAAuC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAC7E,sBACE,QAAC,GAAD;AAAK,IAAA,UAAU,EAAC,GAAhB;AAAoB,IAAA,OAAO,EAAC,GAA5B;AAAgC,IAAA,eAAe,EAAC,SAAhD;AAA0D,IAAA,OAAO,EAAC,MAAlE;AAAA,4BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADjB;AAEE,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,QAAAA,SAAF;AAAaC,QAAAA,aAAb;AAA4BC,QAAAA;AAA5B,OAAf,KAA2D;AACnE,YAAI,CAACH,MAAM,CAACD,OAAR,IAAmB,CAACC,MAAM,CAACD,OAAP,CAAeK,IAAf,EAAxB,EAA+C;AAC7C;AACAF,UAAAA,aAAa,CAAC,KAAD,CAAb;AACA;AACD;;AACD,cAAMG,QAAQ,GAAGP,QAAQ,CAACE,MAAM,CAACD,OAAR,CAAzB;AACAI,QAAAA,SAAS;AACV,OAVH;AAAA,gBAYG,CAAC;AAAEG,QAAAA;AAAF,OAAD,kBACC,QAAC,IAAD;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,OAAO,EAAC,MAAb;AAAoB,UAAA,OAAO,EAAC,MAA5B;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,WAAW,EAAG,WAAUT,IAAK,EAD/B;AAEE,YAAA,OAAO,EAAE,IAFX;AAGE,YAAA,IAAI,EAAC,SAHP;AAIE,YAAA,eAAe,EAAC,SAJlB;AAKE,YAAA,YAAY,EAAE;AAAEU,cAAAA,KAAK,EAAE;AAAT;AALhB;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,MAAD;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,eAAe,EAAC,OAFlB;AAGE,YAAA,KAAK,EAAC,OAHR;AAIE,YAAA,SAAS,EAAED,YAJb,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CAzCM","sourcesContent":["import { Box, Button } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport React from 'react'\nimport { File } from './FileUpload'\nimport { InputField } from './InputField'\ninterface SendMessageProps {\n  name: string\n  onSubmit: Function\n}\nconst ENTER_KEY = 13\n\nexport const SendMessage: React.FC<SendMessageProps> = ({ name, onSubmit }) => {\n  return (\n    <Box gridColumn=\"3\" gridRow=\"3\" backgroundColor=\"#e6e6e6\" display=\"grid\">\n      <File />\n      <Formik\n        initialValues={{ message: '' }}\n        onSubmit={async (values, { setErrors, setSubmitting, resetForm }) => {\n          if (!values.message || !values.message.trim()) {\n            //trim to remove the white spaces\n            setSubmitting(false)\n            return\n          }\n          const response = onSubmit(values.message)\n          resetForm()\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Box display=\"flex\" padding=\"20px\">\n              <InputField\n                placeholder={`message-${name}`}\n                channel={true}\n                name=\"message\"\n                backgroundColor=\"#bfbfbf\"\n                _placeholder={{ color: 'black' }}\n              />\n              <Button\n                type=\"submit\"\n                backgroundColor=\"black\"\n                color=\"white\"\n                isLoading={isSubmitting}\n                //     onClick={isSubmitting ? null : toClose}\n              >\n                Send\n              </Button>\n            </Box>\n          </Form>\n        )}\n      </Formik>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}