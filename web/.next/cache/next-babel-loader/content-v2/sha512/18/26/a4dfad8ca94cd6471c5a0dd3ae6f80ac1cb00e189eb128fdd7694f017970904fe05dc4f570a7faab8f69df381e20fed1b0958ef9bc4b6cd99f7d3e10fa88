{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/pages/view-team/[[...id]].tsx\";\nimport { Box, Input } from '@chakra-ui/react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { Message } from '../../components/Messages';\nimport { Sidebar } from '../../container/Sidebar';\nimport { useAllTeamsQuery, useMeQuery } from '../../generated/graphql';\nimport { useIsAuth } from '../../utils/useIsAuth';\nimport { withApollo } from '../../utils/withApollo';\nconst CreatePage = dynamic(() => import('../create-team'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../create-team')],\n    modules: ['../create-team']\n  }\n});\n\nconst ViewTeam = (_ref) => {\n  var _data$AllTeams;\n\n  let props = Object.assign({}, _ref);\n  useIsAuth();\n  let teamId, channelId;\n  const router = useRouter();\n\n  if (router.query.id) {\n    teamId = parseInt(router.query.id[0]); // in initial render this will be undefined\n\n    channelId = parseInt(router.query.id[1]);\n  }\n\n  const {\n    data,\n    loading\n  } = useAllTeamsQuery();\n  const {\n    data: user,\n    loading: userLoad\n  } = useMeQuery();\n  console.log(data);\n\n  if (!(data !== null && data !== void 0 && (_data$AllTeams = data.AllTeams) !== null && _data$AllTeams !== void 0 && _data$AllTeams.length)) {\n    false ? router.push('/create-team') : null;\n    return /*#__PURE__*/_jsxDEV(CreatePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n\n  const Idx = teamId ? data.AllTeams.indexOf(data.AllTeams.find(u => u.id === teamId)) : 0;\n  const Team = data.AllTeams[Idx];\n  const channelIdx = channelId ? Team.channels.indexOf(Team.channels.find(u => u.id === channelId)) : 0;\n  let Channel = Team.channels[channelIdx];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"grid\",\n    height: \"100vh\",\n    gridTemplateColumns: \"100px 250px 1fr\",\n    gridTemplateRows: \"auto 1fr auto\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      Team: Team,\n      currentTeamId: teamId,\n      data: data,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      gridColumn: \"3\",\n      gridRow: \"1\",\n      textAlign: \"center\",\n      children: [\"#\", Channel.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Message, {\n      channelId: channelIdx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      gridColumn: \"3\",\n      gridRow: \"3\",\n      margin: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: `Message ${Channel.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(ViewTeam); // [[...test]]  collect everything after base path and turn it into an array","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/pages/view-team/[[...id]].tsx"],"names":["Box","Input","dynamic","useRouter","React","Message","Sidebar","useAllTeamsQuery","useMeQuery","useIsAuth","withApollo","CreatePage","ViewTeam","props","teamId","channelId","router","query","id","parseInt","data","loading","user","userLoad","console","log","AllTeams","length","push","Idx","indexOf","find","u","Team","channelIdx","channels","Channel","name","ssr"],"mappings":"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","sourcesContent":["import { Box, Input } from '@chakra-ui/react'\nimport dynamic from 'next/dynamic'\nimport { useRouter } from 'next/router'\nimport React from 'react'\nimport { Message } from '../../components/Messages'\nimport { Sidebar } from '../../container/Sidebar'\nimport { useAllTeamsQuery, useMeQuery } from '../../generated/graphql'\nimport { useIsAuth } from '../../utils/useIsAuth'\nimport { withApollo } from '../../utils/withApollo'\n\nconst CreatePage: any = dynamic(() => import('../create-team'))\nconst ViewTeam = ({ ...props }) => {\n  useIsAuth()\n  let teamId, channelId\n  const router = useRouter()\n  if (router.query.id) {\n    teamId = parseInt(router.query.id[0]) // in initial render this will be undefined\n    channelId = parseInt(router.query.id[1])\n  }\n  const { data, loading } = useAllTeamsQuery()\n  const { data: user, loading: userLoad } = useMeQuery()\n  console.log(data)\n\n  if (!data?.AllTeams?.length) {\n    typeof window !== 'undefined' ? router.push('/create-team') : null\n    return <CreatePage />\n  }\n\n  const Idx = teamId\n    ? data.AllTeams.indexOf(data.AllTeams.find((u) => u.id === teamId))\n    : 0\n  const Team = data.AllTeams[Idx]\n  const channelIdx = channelId\n    ? Team.channels.indexOf(Team.channels.find((u) => u.id === channelId))\n    : 0\n  let Channel = Team.channels[channelIdx]\n\n  return (\n    <Box\n      display=\"grid\"\n      height=\"100vh\"\n      gridTemplateColumns=\"100px 250px 1fr\"\n      gridTemplateRows=\"auto 1fr auto\"\n    >\n      <Sidebar Team={Team} currentTeamId={teamId} data={data} user={user} />\n      <Box gridColumn=\"3\" gridRow=\"1\" textAlign=\"center\">\n        #{Channel.name}\n      </Box>\n      <Message channelId={channelIdx} />\n      <Box gridColumn=\"3\" gridRow=\"3\" margin=\"20px\">\n        <Input type=\"text\" placeholder={`Message ${Channel.name}`} />\n      </Box>\n    </Box>\n  )\n}\nexport default withApollo({ ssr: false })(ViewTeam)\n\n// [[...test]]  collect everything after base path and turn it into an array\n"]},"metadata":{},"sourceType":"module"}