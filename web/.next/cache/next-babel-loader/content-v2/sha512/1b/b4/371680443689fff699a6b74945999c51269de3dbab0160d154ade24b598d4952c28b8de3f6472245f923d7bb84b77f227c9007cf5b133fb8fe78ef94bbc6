{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/Messages.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box } from '@chakra-ui/react';\nimport React from 'react';\nimport { useMessagesQuery } from '../generated/graphql';\nexport var Message = function Message(_ref) {\n  _s();\n\n  var channelId = _ref.channelId;\n\n  var _useMessagesQuery = useMessagesQuery({\n    variables: {\n      channelId: channelId\n    }\n  }),\n      data = _useMessagesQuery.data,\n      loading = _useMessagesQuery.loading;\n\n  console.log(data);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    gridColumn: \"3\",\n    gridRow: \"2\",\n    backgroundColor: \"#e6e6e6\",\n    children: data.Messages.map(function (u) {\n      ;\n\n      /*#__PURE__*/\n      _jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 10\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Message, \"u7TPfYI/5LwZdz4sqAWsS7txgfA=\", false, function () {\n  return [useMessagesQuery];\n});\n\n_c = Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/Messages.tsx"],"names":["Box","React","useMessagesQuery","Message","channelId","variables","data","loading","console","log","Messages","map","u"],"mappings":";;;;;;AAAA,SAASA,GAAT,QAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAMA,OAAO,IAAMC,OAA+B,GAAG,SAAlCA,OAAkC,OAAmB;AAAA;;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,0BACtCF,gBAAgB,CAAC;AACzCG,IAAAA,SAAS,EAAE;AAAED,MAAAA,SAAS,EAAEA;AAAb;AAD8B,GAAD,CADsB;AAAA,MACxDE,IADwD,qBACxDA,IADwD;AAAA,MAClDC,OADkD,qBAClDA,OADkD;;AAIhEC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AACA,MAAIC,OAAJ,EAAa;AACX,wBAAO,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AACD,sBACE,QAAC,GAAD;AAAK,IAAA,UAAU,EAAC,GAAhB;AAAoB,IAAA,OAAO,EAAC,GAA5B;AAAgC,IAAA,eAAe,EAAC,SAAhD;AAAA,cACGD,IAAI,CAACI,QAAL,CAAcC,GAAd,CAAkB,UAACC,CAAD,EAAO;AACxB;;AAAC;AAAA,cAAC,GAAD;AAAA,gCACC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,iBADD,eAEC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,iBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAIF,KALA;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAlBM;;GAAMT,O;UACeD,gB;;;KADfC,O","sourcesContent":["import { Box } from '@chakra-ui/react'\nimport React from 'react'\nimport { useMessagesQuery } from '../generated/graphql'\n\ninterface MessageProps {\n  channelId: number\n}\n\nexport const Message: React.FC<MessageProps> = ({ channelId }) => {\n  const { data, loading } = useMessagesQuery({\n    variables: { channelId: channelId },\n  })\n  console.log(data)\n  if (loading) {\n    return <Box>loading</Box>\n  }\n  return (\n    <Box gridColumn=\"3\" gridRow=\"2\" backgroundColor=\"#e6e6e6\">\n      {data.Messages.map((u) => {\n        ;<Box>\n          <Box></Box>\n          <Box></Box>\n        </Box>\n      })}\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}