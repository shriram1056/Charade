{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/pages/view-team/[[...id]].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// didn't handle the case for no team\nimport { Box } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { Message } from '../../components/Messages';\nimport { SendMessage } from '../../components/SendMessage';\nimport { Sidebar } from '../../container/Sidebar';\nimport { useGetUserQuery } from '../../generated/graphql';\nimport { withApollo } from '../../utils/withApollo';\nvar LoginPage = dynamic(_c = function _c() {\n  return import('./create-team');\n});\n_c2 = LoginPage;\n\nvar ViewTeam = function ViewTeam() {\n  _s();\n\n  var teamId, channelId;\n  var router = useRouter();\n\n  if (router.query.id) {\n    teamId = parseInt(router.query.id[0]); // in initial render this will be undefined\n\n    channelId = parseInt(router.query.id[1]);\n  }\n\n  var _useGetUserQuery = useGetUserQuery({\n    fetchPolicy: 'network-only'\n  }),\n      data = _useGetUserQuery.data,\n      loading = _useGetUserQuery.loading;\n\n  if (true && data.getUser.team) {\n    return;\n  }\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, _this);\n  }\n\n  console.log(data);\n  var teams = data.getUser.team; // direct destructing of data cause error\n\n  var Idx = teamId ? teams.indexOf(teams.find(function (u) {\n    return u.id === teamId;\n  })) : 0;\n  var Team = Idx === -1 ? teams[0] : teams[Idx]; // Idx is -1 if there is no item in allteam with the given ID.\n\n  var channelIdx = channelId ? Team.channels.indexOf(Team.channels.find(function (u) {\n    return u.id === channelId;\n  })) : 0;\n  var Channel = channelIdx === -1 ? Team.channels[0] : Team.channels[channelIdx];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"grid\",\n    height: \"100vh\",\n    gridTemplateColumns: \"100px 250px 1fr\",\n    gridTemplateRows: \"auto 1fr auto\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      Team: Team,\n      AllTeams: teams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this), Channel && /*#__PURE__*/_jsxDEV(Box, {\n      gridColumn: \"3\",\n      gridRow: \"1\",\n      textAlign: \"center\",\n      backgroundColor: \"#e6e6e6\",\n      children: [\"#\", Channel.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, _this), Channel && /*#__PURE__*/_jsxDEV(Message, {\n      channelId: Channel.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, _this), Channel && /*#__PURE__*/_jsxDEV(SendMessage, {\n      name: Channel.name,\n      channelId: Channel.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ViewTeam, \"vX6ox1pc5LeT9A2GhBx7jOksNz4=\", false, function () {\n  return [useRouter, useGetUserQuery];\n});\n\n_c3 = ViewTeam;\nexport default withApollo({\n  ssr: false\n})(ViewTeam); // [[...test]]  collect everything after base path and turn it into an array\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"LoginPage$dynamic\");\n$RefreshReg$(_c2, \"LoginPage\");\n$RefreshReg$(_c3, \"ViewTeam\");","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/pages/view-team/[[...id]].tsx"],"names":["Box","useRouter","React","Message","SendMessage","Sidebar","useGetUserQuery","withApollo","LoginPage","dynamic","ViewTeam","teamId","channelId","router","query","id","parseInt","fetchPolicy","data","loading","getUser","team","console","log","teams","Idx","indexOf","find","u","Team","channelIdx","channels","Channel","name","ssr"],"mappings":"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","sourcesContent":["// didn't handle the case for no team\n\nimport { Box } from '@chakra-ui/react'\nimport { useRouter } from 'next/router'\nimport React from 'react'\nimport { Message } from '../../components/Messages'\nimport { SendMessage } from '../../components/SendMessage'\nimport { Sidebar } from '../../container/Sidebar'\nimport { useGetUserQuery } from '../../generated/graphql'\nimport { withApollo } from '../../utils/withApollo'\nconst LoginPage = dynamic(() => import('./create-team'))\n\nconst ViewTeam = () => {\n  let teamId, channelId\n  const router = useRouter()\n  if (router.query.id) {\n    teamId = parseInt(router.query.id[0]) // in initial render this will be undefined\n    channelId = parseInt(router.query.id[1])\n  }\n  const { data, loading } = useGetUserQuery({ fetchPolicy: 'network-only' })\n\n  if (typeof window !== 'undefined' && data.getUser.team) {\n    return\n  }\n  if (loading) {\n    return <Box>loading</Box>\n  }\n  console.log(data)\n  const {\n    getUser: { team: teams },\n  } = data // direct destructing of data cause error\n\n  const Idx = teamId ? teams.indexOf(teams.find((u) => u.id === teamId)) : 0\n\n  const Team = Idx === -1 ? teams[0] : teams[Idx] // Idx is -1 if there is no item in allteam with the given ID.\n  const channelIdx = channelId\n    ? Team.channels.indexOf(Team.channels.find((u) => u.id === channelId))\n    : 0\n  let Channel = channelIdx === -1 ? Team.channels[0] : Team.channels[channelIdx]\n\n  return (\n    <Box\n      display=\"grid\"\n      height=\"100vh\"\n      gridTemplateColumns=\"100px 250px 1fr\"\n      gridTemplateRows=\"auto 1fr auto\"\n    >\n      <Sidebar Team={Team} AllTeams={teams} />\n      {Channel && (\n        <Box\n          gridColumn=\"3\"\n          gridRow=\"1\"\n          textAlign=\"center\"\n          backgroundColor=\"#e6e6e6\"\n        >\n          #{Channel.name}\n        </Box>\n      )}\n      {Channel && <Message channelId={Channel.id} />}\n      {Channel && <SendMessage name={Channel.name} channelId={Channel.id} />}\n    </Box>\n  )\n}\nexport default withApollo({ ssr: false })(ViewTeam)\n\n// [[...test]]  collect everything after base path and turn it into an array\n"]},"metadata":{},"sourceType":"module"}