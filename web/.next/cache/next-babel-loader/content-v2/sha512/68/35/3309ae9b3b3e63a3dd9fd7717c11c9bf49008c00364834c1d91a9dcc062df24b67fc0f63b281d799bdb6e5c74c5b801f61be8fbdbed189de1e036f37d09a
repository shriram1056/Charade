{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/channelForm.tsx\";\nimport { Button, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport React from 'react';\nimport { useCreateChannelMutation } from '../generated/graphql';\nimport { InputField } from './InputField';\nexport const ChannelForm = ({\n  open,\n  toClose,\n  teamId\n}) => {\n  const [createChannel] = useCreateChannelMutation();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: toClose,\n    isOpen: open,\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {\n      opacity: \"0.2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      pb: 5,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Add Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            channelName: ''\n          },\n          onSubmit: async (values, {\n            setErrors\n          }) => {\n            console.log(values.channelName); // const response = await createChannel({\n            //   variables: { teamId: teamId, name: values.channelName },\n            // })\n            // toClose()\n          },\n          children: ({\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              placeholder: \"channel\",\n              channel: true,\n              name: \"channelname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              margin: \"10px auto 0 auto\",\n              display: \"block\",\n              backgroundColor: \"teal.300\",\n              isLoading: isSubmitting,\n              children: \"Create Channel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/channelForm.tsx"],"names":["Button","Modal","ModalBody","ModalCloseButton","ModalContent","ModalHeader","ModalOverlay","Form","Formik","React","useCreateChannelMutation","InputField","ChannelForm","open","toClose","teamId","createChannel","channelName","values","setErrors","console","log","isSubmitting"],"mappings":";;AAAA,SACEA,MADF,EAEEC,KAFF,EAGEC,SAHF,EAIEC,gBAJF,EAKEC,YALF,EAMEC,WANF,EAOEC,YAPF,QAQO,kBARP;AASA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAMA,OAAO,MAAMC,WAAkC,GAAG,CAAC;AACjDC,EAAAA,IADiD;AAEjDC,EAAAA,OAFiD;AAGjDC,EAAAA;AAHiD,CAAD,KAI5C;AACJ,QAAM,CAACC,aAAD,IAAkBN,wBAAwB,EAAhD;AACA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEI,OAAhB;AAAyB,IAAA,MAAM,EAAED,IAAjC;AAAA,4BAEE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AAAc,MAAA,EAAE,EAAE,CAAlB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,aAAa,EAAE;AAAEI,YAAAA,WAAW,EAAE;AAAf,WADjB;AAEE,UAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,YAAAA;AAAF,WAAf,KAAiC;AACzCC,YAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACD,WAAnB,EADyC,CAEzC;AACA;AACA;AACA;AACD,WARH;AAAA,oBAUG,CAAC;AAAEK,YAAAA;AAAF,WAAD,kBACC,QAAC,IAAD;AAAA,oCACE,QAAC,UAAD;AACE,cAAA,WAAW,EAAC,SADd;AAEE,cAAA,OAAO,EAAE,IAFX;AAGE,cAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,MAAM,EAAC,kBAFT;AAGE,cAAA,OAAO,EAAC,OAHV;AAIE,cAAA,eAAe,EAAC,UAJlB;AAKE,cAAA,SAAS,EAAEA,YALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CA/CM","sourcesContent":["import {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n} from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport React from 'react'\nimport { useCreateChannelMutation } from '../generated/graphql'\nimport { InputField } from './InputField'\ninterface Channelform {\n  open: boolean\n  toClose: any\n  teamId: number\n}\nexport const ChannelForm: React.FC<Channelform> = ({\n  open,\n  toClose,\n  teamId,\n}) => {\n  const [createChannel] = useCreateChannelMutation()\n  return (\n    <Modal onClose={toClose} isOpen={open}>\n      {/*  on Close needs callback and not run toOpen() */}\n      <ModalOverlay opacity=\"0.2\" />\n      <ModalContent pb={5}>\n        <ModalHeader>Add Channel</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Formik\n            initialValues={{ channelName: '' }}\n            onSubmit={async (values, { setErrors }) => {\n              console.log(values.channelName)\n              // const response = await createChannel({\n              //   variables: { teamId: teamId, name: values.channelName },\n              // })\n              // toClose()\n            }}\n          >\n            {({ isSubmitting }) => (\n              <Form>\n                <InputField\n                  placeholder=\"channel\"\n                  channel={true}\n                  name=\"channelname\"\n                />\n                <Button\n                  type=\"submit\"\n                  margin=\"10px auto 0 auto\"\n                  display=\"block\"\n                  backgroundColor=\"teal.300\"\n                  isLoading={isSubmitting}\n                >\n                  Create Channel\n                </Button>\n              </Form>\n            )}\n          </Formik>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}