{"ast":null,"code":"import _regeneratorRuntime from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/pages/view-team/user/[[...id]].tsx\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport { Box } from '@chakra-ui/react';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { DirectMessage } from '../../../components/DirectMessageContainer';\nimport { SendMessage } from '../../../components/SendMessage';\nimport { Sidebar } from '../../../container/Sidebar';\nimport { useCreateDirectMessageMutation, useGetUserQuery } from '../../../generated/graphql';\nimport { withApollo } from '../../../utils/withApollo';\n\nvar ViewTeam = function ViewTeam() {\n  _s2();\n\n  var teamId, receiverId;\n  var router = useRouter();\n\n  if (router.query.id) {\n    teamId = parseInt(router.query.id[0]); // in initial render this will be undefined\n\n    receiverId = parseInt(router.query.id[1]);\n  }\n\n  var _useGetUserQuery = useGetUserQuery({\n    fetchPolicy: 'network-only'\n  }),\n      data = _useGetUserQuery.data,\n      loading = _useGetUserQuery.loading;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, _this);\n  }\n\n  console.log(data);\n  var teams = data.getUser.team; // direct destructing of data cause error\n\n  var Idx = teamId ? teams.indexOf(teams.find(function (u) {\n    return u.id === teamId;\n  })) : 0;\n  var Team = Idx === -1 ? teams[0] : teams[Idx]; // Idx is -1 if there is no item in allteam with the given ID.\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"grid\",\n    height: \"100vh\",\n    gridTemplateColumns: \"100px 250px 1fr\",\n    gridTemplateRows: \"auto 1fr auto\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      username: data.getUser.username,\n      Team: Team,\n      AllTeams: teams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, _this), \"(\", /*#__PURE__*/_jsxDEV(Box, {\n      gridColumn: \"3\",\n      gridRow: \"1\",\n      textAlign: \"center\",\n      backgroundColor: \"#e6e6e6\",\n      children: \"adsfdsf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DirectMessage, {\n      teamId: teamId,\n      receiverId: receiverId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(SendMessage, {\n      name: receiverId,\n      onSubmit: /*#__PURE__*/function () {\n        var _s = $RefreshSig$();\n\n        var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(text) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _s();\n\n                  _context.next = 3;\n                  return useCreateDirectMessageMutation({\n                    variables: {\n                      text: text,\n                      receiverId: receiverId\n                    }\n                  });\n\n                case 3:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }), \"vpjPLbnvjgeeaWxC8HvDc3IBs4c=\", false, function () {\n          return [useCreateDirectMessageMutation];\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\n_s2(ViewTeam, \"vX6ox1pc5LeT9A2GhBx7jOksNz4=\", false, function () {\n  return [useRouter, useGetUserQuery];\n});\n\n_c = ViewTeam;\nexport default withApollo({\n  ssr: false\n})(ViewTeam);\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewTeam\");","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/pages/view-team/user/[[...id]].tsx"],"names":["Box","useRouter","React","DirectMessage","SendMessage","Sidebar","useCreateDirectMessageMutation","useGetUserQuery","withApollo","ViewTeam","teamId","receiverId","router","query","id","parseInt","fetchPolicy","data","loading","console","log","teams","getUser","team","Idx","indexOf","find","u","Team","username","text","variables","ssr"],"mappings":"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","sourcesContent":["import { Box } from '@chakra-ui/react'\nimport { useRouter } from 'next/router'\nimport React from 'react'\nimport { DirectMessage } from '../../../components/DirectMessageContainer'\nimport { SendMessage } from '../../../components/SendMessage'\nimport { Sidebar } from '../../../container/Sidebar'\nimport {\n  useCreateDirectMessageMutation,\n  useGetUserQuery,\n} from '../../../generated/graphql'\nimport { withApollo } from '../../../utils/withApollo'\n\nconst ViewTeam = () => {\n  let teamId, receiverId\n  const router = useRouter()\n  if (router.query.id) {\n    teamId = parseInt(router.query.id[0]) // in initial render this will be undefined\n    receiverId = parseInt(router.query.id[1])\n  }\n\n  const { data, loading } = useGetUserQuery({ fetchPolicy: 'network-only' })\n\n  if (loading) {\n    return <Box>loading</Box>\n  }\n  console.log(data)\n  const {\n    getUser: { team: teams },\n  } = data // direct destructing of data cause error\n\n  const Idx = teamId ? teams.indexOf(teams.find((u) => u.id === teamId)) : 0\n\n  const Team = Idx === -1 ? teams[0] : teams[Idx] // Idx is -1 if there is no item in allteam with the given ID.\n\n  return (\n    <Box\n      display=\"grid\"\n      height=\"100vh\"\n      gridTemplateColumns=\"100px 250px 1fr\"\n      gridTemplateRows=\"auto 1fr auto\"\n    >\n      <Sidebar username={data.getUser.username} Team={Team} AllTeams={teams} />(\n      <Box\n        gridColumn=\"3\"\n        gridRow=\"1\"\n        textAlign=\"center\"\n        backgroundColor=\"#e6e6e6\"\n      >\n        adsfdsf\n      </Box>\n      <DirectMessage teamId={teamId} receiverId={receiverId} />\n      <SendMessage\n        name={receiverId}\n        onSubmit={async (text) => {\n          await useCreateDirectMessageMutation({\n            variables: {\n              text,\n              receiverId,\n            },\n          })\n        }}\n      />\n    </Box>\n  )\n}\nexport default withApollo({ ssr: false })(ViewTeam)\n"]},"metadata":{},"sourceType":"module"}