{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport { useMeQuery } from '../generated/graphql';\nexport var useIsAuth = function useIsAuth(length) {\n  _s();\n\n  var _useMeQuery = useMeQuery(),\n      data = _useMeQuery.data,\n      loading = _useMeQuery.loading; //after loading is set to false both data or error is retrieved\n\n\n  var router = useRouter();\n  useEffect(function () {\n    if (!(data !== null && data !== void 0 && data.me) && !loading) {\n      router.push('/login?next=' + router.pathname); // give current path name. '?' is the symbol for query, can be accessed by router.query.next\n    }\n\n    if (length) {\n      return router.push('/create-team');\n    }\n  }, [data, loading]); //runs after the data or loading are assigned.but both data and loading are assigned at the same time\n};\n\n_s(useIsAuth, \"HFzD9whMdVlJlXTSiGTGw6bEFlE=\", false, function () {\n  return [useMeQuery, useRouter];\n});","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/utils/useIsAuth.ts"],"names":["useRouter","useEffect","useMeQuery","useIsAuth","length","data","loading","router","me","push","pathname"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,MAAD,EAA4B;AAAA;;AAAA,oBACzBF,UAAU,EADe;AAAA,MAC3CG,IAD2C,eAC3CA,IAD2C;AAAA,MACrCC,OADqC,eACrCA,OADqC,EAEnD;;;AACA,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AACAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,EAACI,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEG,EAAP,KAAa,CAACF,OAAlB,EAA2B;AACzBC,MAAAA,MAAM,CAACE,IAAP,CAAY,iBAAiBF,MAAM,CAACG,QAApC,EADyB,CACqB;AAC/C;;AACD,QAAIN,MAAJ,EAAY;AACV,aAAOG,MAAM,CAACE,IAAP,CAAY,cAAZ,CAAP;AACD;AACF,GAPQ,EAON,CAACJ,IAAD,EAAOC,OAAP,CAPM,CAAT,CAJmD,CAYnD;AACD,CAbM;;GAAMH,S;UACeD,U,EAEXF,S","sourcesContent":["import { useRouter } from 'next/router'\nimport { useEffect } from 'react'\nimport { useMeQuery } from '../generated/graphql'\n\nexport const useIsAuth = (length?: number | null) => {\n  const { data, loading } = useMeQuery()\n  //after loading is set to false both data or error is retrieved\n  const router = useRouter()\n  useEffect(() => {\n    if (!data?.me && !loading) {\n      router.push('/login?next=' + router.pathname) // give current path name. '?' is the symbol for query, can be accessed by router.query.next\n    }\n    if (length) {\n      return router.push('/create-team')\n    }\n  }, [data, loading])\n  //runs after the data or loading are assigned.but both data and loading are assigned at the same time\n}\n"]},"metadata":{},"sourceType":"module"}