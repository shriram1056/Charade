{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/multipleUser.tsx\";\nimport { CUIAutoComplete } from 'chakra-ui-autocomplete';\nimport React from 'react';\nexport const MultipleUser = ({\n  data,\n  loading,\n  values,\n  currentUserId\n}) => {\n  if (loading) {\n    return null;\n  }\n\n  const {\n    getTeamMembers\n  } = data;\n  const testData = getTeamMembers.map(t => {\n    return {\n      value: t.id,\n      label: t.username\n    };\n  });\n  const actualData = testData.filter(t => t.value !== currentUserId);\n  const [pickerItems, _] = React.useState(actualData);\n  const [selectedItems, setSelectedItems] = React.useState([]);\n\n  const handleSelectedItemsChange = selectedItems => {\n    if (selectedItems) {\n      setSelectedItems(selectedItems);\n      values('members', selectedItems);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CUIAutoComplete, {\n    label: \"add channel members\",\n    placeholder: \"add member\",\n    items: pickerItems,\n    selectedItems: selectedItems,\n    onSelectedItemsChange: changes => {\n      handleSelectedItemsChange(changes.selectedItems);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/multipleUser.tsx"],"names":["CUIAutoComplete","React","MultipleUser","data","loading","values","currentUserId","getTeamMembers","testData","map","t","value","id","label","username","actualData","filter","pickerItems","_","useState","selectedItems","setSelectedItems","handleSelectedItemsChange","changes"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,wBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAaA,OAAO,MAAMC,YAAyC,GAAG,CAAC;AACxDC,EAAAA,IADwD;AAExDC,EAAAA,OAFwD;AAGxDC,EAAAA,MAHwD;AAIxDC,EAAAA;AAJwD,CAAD,KAKnD;AACJ,MAAIF,OAAJ,EAAa;AACX,WAAO,IAAP;AACD;;AACD,QAAM;AAAEG,IAAAA;AAAF,MAAqBJ,IAA3B;AACA,QAAMK,QAAQ,GAAGD,cAAc,CAACE,GAAf,CAAoBC,CAAD,IAAO;AACzC,WAAO;AAAEC,MAAAA,KAAK,EAAED,CAAC,CAACE,EAAX;AAAeC,MAAAA,KAAK,EAAEH,CAAC,CAACI;AAAxB,KAAP;AACD,GAFgB,CAAjB;AAGA,QAAMC,UAAU,GAAGP,QAAQ,CAACQ,MAAT,CAAiBN,CAAD,IAAOA,CAAC,CAACC,KAAF,KAAYL,aAAnC,CAAnB;AAEA,QAAM,CAACW,WAAD,EAAcC,CAAd,IAAmBjB,KAAK,CAACkB,QAAN,CAAeJ,UAAf,CAAzB;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCpB,KAAK,CAACkB,QAAN,CAAuB,EAAvB,CAA1C;;AAEA,QAAMG,yBAAyB,GAAIF,aAAD,IAA4B;AAC5D,QAAIA,aAAJ,EAAmB;AACjBC,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACAf,MAAAA,MAAM,CAAC,SAAD,EAAYe,aAAZ,CAAN;AACD;AACF,GALD;;AAOA,sBACE,QAAC,eAAD;AACE,IAAA,KAAK,EAAC,qBADR;AAEE,IAAA,WAAW,EAAC,YAFd;AAGE,IAAA,KAAK,EAAEH,WAHT;AAIE,IAAA,aAAa,EAAEG,aAJjB;AAKE,IAAA,qBAAqB,EAAGG,OAAD,IAAa;AAClCD,MAAAA,yBAAyB,CAACC,OAAO,CAACH,aAAT,CAAzB;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CApCM","sourcesContent":["import { CUIAutoComplete } from 'chakra-ui-autocomplete'\nimport React from 'react'\ninterface MultipleUserProps {\n  data: any\n  loading: boolean\n  values: (field: string, value: any, shouldValidate?: boolean) => void\n  currentUserId: number\n}\n\nexport interface Item {\n  label: string\n  value: string\n}\n\nexport const MultipleUser: React.FC<MultipleUserProps> = ({\n  data,\n  loading,\n  values,\n  currentUserId,\n}) => {\n  if (loading) {\n    return null\n  }\n  const { getTeamMembers } = data\n  const testData = getTeamMembers.map((t) => {\n    return { value: t.id, label: t.username }\n  })\n  const actualData = testData.filter((t) => t.value !== currentUserId)\n\n  const [pickerItems, _] = React.useState(actualData)\n  const [selectedItems, setSelectedItems] = React.useState<Item[]>([])\n\n  const handleSelectedItemsChange = (selectedItems?: Item[]) => {\n    if (selectedItems) {\n      setSelectedItems(selectedItems)\n      values('members', selectedItems)\n    }\n  }\n\n  return (\n    <CUIAutoComplete\n      label=\"add channel members\"\n      placeholder=\"add member\"\n      items={pickerItems}\n      selectedItems={selectedItems}\n      onSelectedItemsChange={(changes) => {\n        handleSelectedItemsChange(changes.selectedItems)\n      }}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}