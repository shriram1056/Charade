{"ast":null,"code":"import _regeneratorRuntime from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/channelForm.tsx\",\n    _this = this;\n\nimport { Button, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay } from '@chakra-ui/react';\nimport { Formik } from 'formik';\nimport React from 'react';\nexport var ChannelForm = function ChannelForm(_ref) {\n  var open = _ref.open,\n      toClose = _ref.toClose;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: toClose,\n    isOpen: open,\n    children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {\n      opacity: \"0.2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ModalContent, {\n      pb: 5,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        children: \"Add Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            name: ''\n          },\n          onSubmit: /*#__PURE__*/function () {\n            var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n              var setErrors;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      setErrors = _ref2.setErrors;\n                      console.log(values);\n\n                    case 2:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n\n            return function (_x, _x2) {\n              return _ref3.apply(this, arguments);\n            };\n          }(),\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            margin: \"10px auto 0 auto\",\n            display: \"block\",\n            backgroundColor: \"teal.300\",\n            children: \"Create Channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, _this);\n};\n_c = ChannelForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelForm\");","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/channelForm.tsx"],"names":["Button","Input","Modal","ModalBody","ModalCloseButton","ModalContent","ModalHeader","ModalOverlay","Formik","React","ChannelForm","open","toClose","name","values","setErrors","console","log"],"mappings":";;;;;;;AAAA,SACEA,MADF,EAEEC,KAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,gBALF,EAMEC,YANF,EAOEC,WAPF,EAQEC,YARF,QASO,kBATP;AAUA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAKA,OAAO,IAAMC,WAAkC,GAAG,SAArCA,WAAqC,OAAuB;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACvE,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,OAAhB;AAAyB,IAAA,MAAM,EAAED,IAAjC;AAAA,4BAEE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,YAAD;AAAc,MAAA,EAAE,EAAE,CAAlB;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE,QAAC,SAAD;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,aAAa,EAAE;AAAEE,YAAAA,IAAI,EAAE;AAAR,WADjB;AAEE,UAAA,QAAQ;AAAA,iFAAE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,sBAAAA,SAAjB,SAAiBA,SAAjB;AACRC,sBAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAF;;AAAA;AAAA;AAAA;AAAA,aAFV;AAAA,kCAME,QAAC,KAAD;AAAO,YAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,mBANF,eAOE,QAAC,MAAD;AACE,YAAA,MAAM,EAAC,kBADT;AAEE,YAAA,OAAO,EAAC,OAFV;AAGE,YAAA,eAAe,EAAC,UAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA2BD,CA5BM;KAAMJ,W","sourcesContent":["import {\n  Button,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n} from '@chakra-ui/react'\nimport { Formik } from 'formik'\nimport React from 'react'\ninterface Channelform {\n  open: boolean\n  toClose: any\n}\nexport const ChannelForm: React.FC<Channelform> = ({ open, toClose }) => {\n  return (\n    <Modal onClose={toClose} isOpen={open}>\n      {/*  on Close needs callback and not run toOpen() */}\n      <ModalOverlay opacity=\"0.2\" />\n      <ModalContent pb={5}>\n        <ModalHeader>Add Channel</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Formik\n            initialValues={{ name: '' }}\n            onSubmit={async (values, { setErrors }) => {\n              console.log(values)\n            }}\n          >\n            <Input placeholder=\"channel\" />\n            <Button\n              margin=\"10px auto 0 auto\"\n              display=\"block\"\n              backgroundColor=\"teal.300\"\n            >\n              Create Channel\n            </Button>\n          </Formik>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}