{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/multipleUser.tsx\";\nimport { CUIAutoComplete } from 'chakra-ui-autocomplete';\nimport React from 'react';\nexport const MultipleUser = ({\n  data,\n  loading\n}) => {\n  if (loading) {\n    return null;\n  }\n\n  const {\n    getTeamMembers\n  } = data;\n  const member = getTeamMembers.map(t => {\n    return {\n      values: t,\n      label: t.username\n    };\n  });\n  const [pickerItems, setPickerItems] = React.useState(member);\n  const [selectedItems, setSelectedItems] = React.useState([]);\n  console.log(pickerItems);\n\n  const handleSelectedItemsChange = selectedItems => {\n    if (selectedItems) {\n      console.log(selectedItems);\n      setSelectedItems(selectedItems);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CUIAutoComplete, {\n    label: \"add channel members\",\n    placeholder: \"add member\",\n    items: pickerItems,\n    selectedItems: selectedItems,\n    onSelectedItemsChange: changes => {\n      console.log(changes);\n      handleSelectedItemsChange(changes.selectedItems);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/multipleUser.tsx"],"names":["CUIAutoComplete","React","MultipleUser","data","loading","getTeamMembers","member","map","t","values","label","username","pickerItems","setPickerItems","useState","selectedItems","setSelectedItems","console","log","handleSelectedItemsChange","changes"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,wBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAMA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACjD,MAAIA,OAAJ,EAAa;AACX,WAAO,IAAP;AACD;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAqBF,IAA3B;AACA,QAAMG,MAAM,GAAGD,cAAc,CAACE,GAAf,CAAoBC,CAAD,IAAO;AACvC,WAAO;AAAEC,MAAAA,MAAM,EAAED,CAAV;AAAaE,MAAAA,KAAK,EAAEF,CAAC,CAACG;AAAtB,KAAP;AACD,GAFc,CAAf;AAGA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACa,QAAN,CAAeR,MAAf,CAAtC;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCf,KAAK,CAACa,QAAN,CAAsB,EAAtB,CAA1C;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;;AAEA,QAAMO,yBAAyB,GAAIJ,aAAD,IAA2B;AAC3D,QAAIA,aAAJ,EAAmB;AACjBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACAC,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD;AACF,GALD;;AAOA,sBACE,QAAC,eAAD;AACE,IAAA,KAAK,EAAC,qBADR;AAEE,IAAA,WAAW,EAAC,YAFd;AAGE,IAAA,KAAK,EAAEH,WAHT;AAIE,IAAA,aAAa,EAAEG,aAJjB;AAKE,IAAA,qBAAqB,EAAGK,OAAD,IAAa;AAClCH,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACAD,MAAAA,yBAAyB,CAACC,OAAO,CAACL,aAAT,CAAzB;AACD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhCM","sourcesContent":["import { CUIAutoComplete } from 'chakra-ui-autocomplete'\nimport React from 'react'\ninterface MultipleUserProps {\n  data: any\n  loading: boolean\n}\n\nexport const MultipleUser = ({ data, loading }) => {\n  if (loading) {\n    return null\n  }\n  const { getTeamMembers } = data\n  const member = getTeamMembers.map((t) => {\n    return { values: t, label: t.username }\n  })\n  const [pickerItems, setPickerItems] = React.useState(member)\n  const [selectedItems, setSelectedItems] = React.useState<any[]>([])\n\n  console.log(pickerItems)\n\n  const handleSelectedItemsChange = (selectedItems?: any[]) => {\n    if (selectedItems) {\n      console.log(selectedItems)\n      setSelectedItems(selectedItems)\n    }\n  }\n\n  return (\n    <CUIAutoComplete\n      label=\"add channel members\"\n      placeholder=\"add member\"\n      items={pickerItems}\n      selectedItems={selectedItems}\n      onSelectedItemsChange={(changes) => {\n        console.log(changes)\n        handleSelectedItemsChange(changes.selectedItems)\n      }}\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}