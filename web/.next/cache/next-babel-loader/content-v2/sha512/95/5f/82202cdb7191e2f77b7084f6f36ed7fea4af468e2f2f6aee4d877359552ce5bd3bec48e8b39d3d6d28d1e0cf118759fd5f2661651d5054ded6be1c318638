{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/team.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Box, ListItem, UnorderedList } from '@chakra-ui/react';\nimport React from 'react';\n\nconst team = ({\n  id,\n  name\n}) => /*#__PURE__*/_jsxDEV(ListItem, {\n  height: \"50px\",\n  width: \"50px\",\n  bgColor: \"#676066\",\n  color: \"#fff\",\n  margin: \"auto\",\n  \"margin-bottom\": \"10px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  fontSize: \"24px\",\n  borderRadius: \"11px\",\n  _hover: {\n    borderStyle: 'solid',\n    borderWidth: 'thick',\n    borderColor: '#767676'\n  },\n  children: name\n}, `team-${id}`, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n/*height: 50px;\n  width: 50px;\n  background-color: #676066;\n  color: #fff;\n  margin: auto;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  border-radius: 11px;\n  &:hover {\n    border-style: solid;\n    border-width: thick;\n    border-color: #767676;\n  } */\n\n\nexport const Team = (_ref) => {\n  let {\n    teams\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"teams\"]);\n\n  return /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({}, props), {}, {\n    children: /*#__PURE__*/_jsxDEV(UnorderedList, {\n      width: \"100%\",\n      paddingLeft: \"0px\",\n      listStyleType: \"none\",\n      marginLeft: \"0px\",\n      paddingTop: \"10px\",\n      children: teams.map(team)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/team.tsx"],"names":["Box","ListItem","UnorderedList","React","team","id","name","borderStyle","borderWidth","borderColor","Team","teams","props","map"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,GAAT,EAAyBC,QAAzB,EAAmCC,aAAnC,QAAwD,kBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAMA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAD,kBACX,QAAC,QAAD;AAEE,EAAA,MAAM,EAAC,MAFT;AAGE,EAAA,KAAK,EAAC,MAHR;AAIE,EAAA,OAAO,EAAC,SAJV;AAKE,EAAA,KAAK,EAAC,MALR;AAME,EAAA,MAAM,EAAC,MANT;AAOE,mBAAc,MAPhB;AAQE,EAAA,OAAO,EAAC,MARV;AASE,EAAA,UAAU,EAAC,QATb;AAUE,EAAA,cAAc,EAAC,QAVjB;AAWE,EAAA,QAAQ,EAAC,MAXX;AAYE,EAAA,YAAY,EAAC,MAZf;AAaE,EAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAE,OADP;AAENC,IAAAA,WAAW,EAAE,OAFP;AAGNC,IAAAA,WAAW,EAAE;AAHP,GAbV;AAAA,YAmBGH;AAnBH,GACQ,QAAOD,EAAG,EADlB;AAAA;AAAA;AAAA;AAAA,QADF;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMK,IAAyB,GAAG,UAAyB;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;AAAA,MAAZC,KAAY;;AAChE,sBACE,QAAC,GAAD,kCAASA,KAAT;AAAA,2BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,WAAW,EAAC,KAFd;AAGE,MAAA,aAAa,EAAC,MAHhB;AAIE,MAAA,UAAU,EAAC,KAJb;AAKE,MAAA,UAAU,EAAC,MALb;AAAA,gBAOGD,KAAK,CAACE,GAAN,CAAUT,IAAV;AAPH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAdM","sourcesContent":["import { Box, GridProps, ListItem, UnorderedList } from '@chakra-ui/react'\nimport React from 'react'\nimport { Team as Teams } from '../generated/graphql'\n\ntype TeamProps = GridProps & {\n  teams: Teams[]\n}\nconst team = ({ id, name }) => (\n  <ListItem\n    key={`team-${id}`}\n    height=\"50px\"\n    width=\"50px\"\n    bgColor=\"#676066\"\n    color=\"#fff\"\n    margin=\"auto\"\n    margin-bottom=\"10px\"\n    display=\"flex\"\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    fontSize=\"24px\"\n    borderRadius=\"11px\"\n    _hover={{\n      borderStyle: 'solid',\n      borderWidth: 'thick',\n      borderColor: '#767676',\n    }}\n  >\n    {name}\n  </ListItem>\n)\n\n/*height: 50px;\n  width: 50px;\n  background-color: #676066;\n  color: #fff;\n  margin: auto;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 24px;\n  border-radius: 11px;\n  &:hover {\n    border-style: solid;\n    border-width: thick;\n    border-color: #767676;\n  } */\nexport const Team: React.FC<TeamProps> = ({ teams, ...props }) => {\n  return (\n    <Box {...props}>\n      <UnorderedList\n        width=\"100%\"\n        paddingLeft=\"0px\"\n        listStyleType=\"none\"\n        marginLeft=\"0px\"\n        paddingTop=\"10px\"\n      >\n        {teams.map(team)}\n      </UnorderedList>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}