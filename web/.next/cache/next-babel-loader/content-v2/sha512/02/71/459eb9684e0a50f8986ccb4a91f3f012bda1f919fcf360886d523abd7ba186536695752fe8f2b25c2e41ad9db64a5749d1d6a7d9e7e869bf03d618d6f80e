{"ast":null,"code":"import _regeneratorRuntime from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/SendMessage.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { Box, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport React from 'react';\nimport { useAddPictureMutation } from '../generated/graphql';\nimport { InputField } from './InputField';\nexport var SendMessage = function SendMessage(_ref) {\n  _s();\n\n  var name = _ref.name,\n      onSubmit = _ref.onSubmit;\n\n  var _useAddPictureMutatio = useAddPictureMutation(),\n      _useAddPictureMutatio2 = _slicedToArray(_useAddPictureMutatio, 1),\n      addPicture = _useAddPictureMutatio2[0];\n\n  var handlefile = function handlefile(e) {\n    var file = e.target.file[0];\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    gridColumn: \"3\",\n    gridRow: \"3\",\n    backgroundColor: \"#e6e6e6\",\n    display: \"flex\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handlefile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: \"1 0\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          message: ''\n        },\n        onSubmit: /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n            var setErrors, setSubmitting, resetForm, response;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    setErrors = _ref2.setErrors, setSubmitting = _ref2.setSubmitting, resetForm = _ref2.resetForm;\n\n                    if (!(!values.message || !values.message.trim())) {\n                      _context.next = 4;\n                      break;\n                    }\n\n                    //trim to remove the white spaces\n                    setSubmitting(false);\n                    return _context.abrupt(\"return\");\n\n                  case 4:\n                    response = onSubmit(values.message);\n                    resetForm();\n\n                  case 6:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x, _x2) {\n            return _ref3.apply(this, arguments);\n          };\n        }(),\n        children: function children(_ref4) {\n          var isSubmitting = _ref4.isSubmitting;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              padding: \"20px\",\n              paddingLeft: \"0\",\n              children: [/*#__PURE__*/_jsxDEV(InputField, {\n                placeholder: \"message-\".concat(name),\n                channel: true,\n                name: \"message\",\n                backgroundColor: \"#bfbfbf\",\n                _placeholder: {\n                  color: 'black'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                backgroundColor: \"black\",\n                color: \"white\",\n                isLoading: isSubmitting //     onClick={isSubmitting ? null : toClose}\n                ,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(SendMessage, \"koSeFpdz6U/k3xrDCTo64wCG9Ng=\", false, function () {\n  return [useAddPictureMutation];\n});\n\n_c = SendMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendMessage\");","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/SendMessage.tsx"],"names":["Box","Button","Form","Formik","React","useAddPictureMutation","InputField","SendMessage","name","onSubmit","addPicture","handlefile","e","file","target","message","values","setErrors","setSubmitting","resetForm","trim","response","isSubmitting","color"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AACA,SAASC,UAAT,QAA2B,cAA3B;AAMA,OAAO,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,OAAwB;AAAA;;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,8BACxDJ,qBAAqB,EADmC;AAAA;AAAA,MACtEK,UADsE;;AAE7E,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,CAAD,EAAO;AACxB,QAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAT,CAAc,CAAd,CAAb;AACD,GAFD;;AAGA,sBACE,QAAC,GAAD;AACE,IAAA,UAAU,EAAC,GADb;AAEE,IAAA,OAAO,EAAC,GAFV;AAGE,IAAA,eAAe,EAAC,SAHlB;AAIE,IAAA,OAAO,EAAC,MAJV;AAKE,IAAA,UAAU,EAAC,QALb;AAAA,4BAOE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEF;AAA7B;AAAA;AAAA;AAAA;AAAA,aAPF,eAQE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAC,KAAV;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,aAAa,EAAE;AAAEI,UAAAA,OAAO,EAAE;AAAX,SADjB;AAEE,QAAA,QAAQ;AAAA,+EAAE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,oBAAAA,SAAjB,SAAiBA,SAAjB,EAA4BC,aAA5B,SAA4BA,aAA5B,EAA2CC,SAA3C,SAA2CA,SAA3C;;AAAA,0BACJ,CAACH,MAAM,CAACD,OAAR,IAAmB,CAACC,MAAM,CAACD,OAAP,CAAeK,IAAf,EADhB;AAAA;AAAA;AAAA;;AAEN;AACAF,oBAAAA,aAAa,CAAC,KAAD,CAAb;AAHM;;AAAA;AAMFG,oBAAAA,QANE,GAMSZ,QAAQ,CAACO,MAAM,CAACD,OAAR,CANjB;AAORI,oBAAAA,SAAS;;AAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;AAAA,WAFV;AAAA,kBAYG;AAAA,cAAGG,YAAH,SAAGA,YAAH;AAAA,8BACC,QAAC,IAAD;AAAA,mCACE,QAAC,GAAD;AAAK,cAAA,OAAO,EAAC,MAAb;AAAoB,cAAA,OAAO,EAAC,MAA5B;AAAmC,cAAA,WAAW,EAAC,GAA/C;AAAA,sCACE,QAAC,UAAD;AACE,gBAAA,WAAW,oBAAad,IAAb,CADb;AAEE,gBAAA,OAAO,EAAE,IAFX;AAGE,gBAAA,IAAI,EAAC,SAHP;AAIE,gBAAA,eAAe,EAAC,SAJlB;AAKE,gBAAA,YAAY,EAAE;AAAEe,kBAAAA,KAAK,EAAE;AAAT;AALhB;AAAA;AAAA;AAAA;AAAA,uBADF,eAQE,QAAC,MAAD;AACE,gBAAA,IAAI,EAAC,QADP;AAEE,gBAAA,eAAe,EAAC,OAFlB;AAGE,gBAAA,KAAK,EAAC,OAHR;AAIE,gBAAA,SAAS,EAAED,YAJb,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADD;AAAA;AAZH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aARF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAgDD,CArDM;;GAAMf,W;UACUF,qB;;;KADVE,W","sourcesContent":["import { Box, Button } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport React from 'react'\nimport { useAddPictureMutation } from '../generated/graphql'\nimport { InputField } from './InputField'\ninterface SendMessageProps {\n  name: string\n  onSubmit: Function\n}\n\nexport const SendMessage: React.FC<SendMessageProps> = ({ name, onSubmit }) => {\n  const [addPicture] = useAddPictureMutation()\n  const handlefile = (e) => {\n    const file = e.target.file[0]\n  }\n  return (\n    <Box\n      gridColumn=\"3\"\n      gridRow=\"3\"\n      backgroundColor=\"#e6e6e6\"\n      display=\"flex\"\n      alignItems=\"center\"\n    >\n      <input type=\"file\" onChange={handlefile} />\n      <Box flex=\"1 0\">\n        <Formik\n          initialValues={{ message: '' }}\n          onSubmit={async (values, { setErrors, setSubmitting, resetForm }) => {\n            if (!values.message || !values.message.trim()) {\n              //trim to remove the white spaces\n              setSubmitting(false)\n              return\n            }\n            const response = onSubmit(values.message)\n            resetForm()\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Box display=\"flex\" padding=\"20px\" paddingLeft=\"0\">\n                <InputField\n                  placeholder={`message-${name}`}\n                  channel={true}\n                  name=\"message\"\n                  backgroundColor=\"#bfbfbf\"\n                  _placeholder={{ color: 'black' }}\n                />\n                <Button\n                  type=\"submit\"\n                  backgroundColor=\"black\"\n                  color=\"white\"\n                  isLoading={isSubmitting}\n                  //     onClick={isSubmitting ? null : toClose}\n                >\n                  Send\n                </Button>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}