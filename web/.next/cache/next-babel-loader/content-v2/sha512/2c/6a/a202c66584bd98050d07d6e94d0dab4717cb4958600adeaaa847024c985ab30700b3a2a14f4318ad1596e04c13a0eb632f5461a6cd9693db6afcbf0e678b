{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/Messages.tsx\";\nimport { Box, Stack, Text } from '@chakra-ui/react';\nimport React from 'react';\nimport { useMessagesQuery } from '../generated/graphql';\nexport const Message = ({\n  channelId\n}) => {\n  const {\n    data,\n    loading\n  } = useMessagesQuery({\n    variables: {\n      channelId: channelId\n    }\n  });\n  console.log(data);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    gridColumn: \"3\",\n    gridRow: \"2\",\n    backgroundColor: \"#e6e6e6\",\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 8,\n      ml: 3,\n      children: data.Messages.map(u => /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: [u.user.username, /*#__PURE__*/_jsxDEV(Text, {\n            children: u.createdAt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: u.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, `message-${u.id}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/Messages.tsx"],"names":["Box","Stack","Text","React","useMessagesQuery","Message","channelId","data","loading","variables","console","log","Messages","map","u","user","username","createdAt","text","id"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,KAAd,EAAqBC,IAArB,QAAiC,kBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAMA,OAAO,MAAMC,OAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAChE,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBJ,gBAAgB,CAAC;AACzCK,IAAAA,SAAS,EAAE;AAAEH,MAAAA,SAAS,EAAEA;AAAb;AAD8B,GAAD,CAA1C;AAGAI,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,MAAIC,OAAJ,EAAa;AACX,wBAAO,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBACE,QAAC,GAAD;AAAK,IAAA,UAAU,EAAC,GAAhB;AAAoB,IAAA,OAAO,EAAC,GAA5B;AAAgC,IAAA,eAAe,EAAC,SAAhD;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAAA,gBACGD,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAmBC,CAAD,iBACjB,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAA,qBACGA,CAAC,CAACC,IAAF,CAAOC,QADV,eAEE,QAAC,IAAD;AAAA,sBAAOF,CAAC,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,GAAD;AAAA,oBAAMH,CAAC,CAACI;AAAR;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,SAAW,WAAUJ,CAAC,CAACK,EAAG,EAA1B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAvBM","sourcesContent":["import { Box, Stack, Text } from '@chakra-ui/react'\nimport React from 'react'\nimport { useMessagesQuery } from '../generated/graphql'\n\ninterface MessageProps {\n  channelId: number\n}\n\nexport const Message: React.FC<MessageProps> = ({ channelId }) => {\n  const { data, loading } = useMessagesQuery({\n    variables: { channelId: channelId },\n  })\n  console.log(data)\n  if (loading) {\n    return <Box>loading</Box>\n  }\n  return (\n    <Box gridColumn=\"3\" gridRow=\"2\" backgroundColor=\"#e6e6e6\">\n      <Stack spacing={8} ml={3}>\n        {data.Messages.map((u) => (\n          <Box key={`message-${u.id}`}>\n            <Box>\n              {u.user.username}\n              <Text>{u.createdAt}</Text>\n            </Box>\n            <Box>{u.text}</Box>\n          </Box>\n        ))}\n      </Stack>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}