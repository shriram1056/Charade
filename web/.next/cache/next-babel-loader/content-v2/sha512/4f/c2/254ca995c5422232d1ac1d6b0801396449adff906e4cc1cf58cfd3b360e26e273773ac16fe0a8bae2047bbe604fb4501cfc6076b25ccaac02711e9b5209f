{"ast":null,"code":"import { ApolloClient, InMemoryCache } from '@apollo/client';\n// this import is for forwarding the cookie\nimport { withApollo as createWithApollo } from 'next-apollo'; // ctx can be undefined in ssr:false, so we need optional\n\nvar createClient = function createClient(ctx) {\n  var _ctx$req;\n\n  return new ApolloClient({\n    uri: 'http://localhost:4001/graphql',\n    credentials: 'include',\n    //Apollo Client can include user credentials (basic auth, cookies, etc.) in the HTTP requests it makes to a GraphQL server. By default, credentials are included only if the server is hosted at the same origin as the application using Apollo Client.also, set credentials to true in cors package in express\n    headers: {\n      cookie: (false ? ctx === null || ctx === void 0 ? void 0 : (_ctx$req = ctx.req) === null || _ctx$req === void 0 ? void 0 : _ctx$req.headers.cookie : undefined) || ''\n    },\n    cache: new InMemoryCache()\n  });\n};\n\nexport var withApollo = createWithApollo(createClient); //createWithApollo takes a ApolloClient<NormalizedCacheObject> | ((ctx?: NextPageContext) => ApolloClient<NormalizedCacheObject>); your createClient is of type (ctx: NextPageContext) => ApolloClient<NormalizedCacheObject>\n//React Context provides a way to pass data through the component tree without having to pass props down manually at every level.","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/utils/withApollo.ts"],"names":["ApolloClient","InMemoryCache","withApollo","createWithApollo","createClient","ctx","uri","credentials","headers","cookie","req","undefined","cache"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AAEA;AACA,SAASC,UAAU,IAAIC,gBAAvB,QAA+C,aAA/C,C,CAEA;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD;AAAA;;AAAA,SACnB,IAAIL,YAAJ,CAAiB;AACfM,IAAAA,GAAG,EAAE,+BADU;AAEfC,IAAAA,WAAW,EAAE,SAFE;AAES;AACxBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EACJ,CAAC,QACGJ,GADH,aACGA,GADH,mCACGA,GAAG,CAAEK,GADR,6CACG,SAAUF,OAAV,CAAkBC,MADrB,GAEGE,SAFJ,KAEkB;AAJb,KAHM;AASfC,IAAAA,KAAK,EAAE,IAAIX,aAAJ;AATQ,GAAjB,CADmB;AAAA,CAArB;;AAaA,OAAO,IAAMC,UAAU,GAAGC,gBAAgB,CAACC,YAAD,CAAnC,C,CAEP;AAEA","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client'\nimport { NextPageContext } from 'next'\n// this import is for forwarding the cookie\nimport { withApollo as createWithApollo } from 'next-apollo'\n\n// ctx can be undefined in ssr:false, so we need optional\nconst createClient = (ctx?: NextPageContext) =>\n  new ApolloClient({\n    uri: 'http://localhost:4001/graphql',\n    credentials: 'include', //Apollo Client can include user credentials (basic auth, cookies, etc.) in the HTTP requests it makes to a GraphQL server. By default, credentials are included only if the server is hosted at the same origin as the application using Apollo Client.also, set credentials to true in cors package in express\n    headers: {\n      cookie:\n        (typeof window === 'undefined'\n          ? ctx?.req?.headers.cookie\n          : undefined) || '',\n    },\n    cache: new InMemoryCache(),\n  })\n\nexport const withApollo = createWithApollo(createClient)\n\n//createWithApollo takes a ApolloClient<NormalizedCacheObject> | ((ctx?: NextPageContext) => ApolloClient<NormalizedCacheObject>); your createClient is of type (ctx: NextPageContext) => ApolloClient<NormalizedCacheObject>\n\n//React Context provides a way to pass data through the component tree without having to pass props down manually at every level.\n"]},"metadata":{},"sourceType":"module"}