{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/container/Sidebar.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useDisclosure } from '@chakra-ui/react';\nimport React from 'react';\nimport { Channel } from '../components/channel';\nimport { ChannelForm } from '../components/channelForm';\nimport { DirectMessageForm } from '../components/DirectMessageForm';\nimport { InvitePeople } from '../components/InvitePeople';\nimport { Team as Teams } from '../components/team';\nimport { useGetTeamMembersQuery } from '../generated/graphql';\nexport var Sidebar = function Sidebar(_ref) {\n  _s();\n\n  var AllTeams = _ref.AllTeams,\n      Team = _ref.Team,\n      username = _ref.username;\n\n  var _useDisclosure = useDisclosure(),\n      isOpen = _useDisclosure.isOpen,\n      onOpen = _useDisclosure.onOpen,\n      onClose = _useDisclosure.onClose; // open and close modal\n\n\n  var _useDisclosure2 = useDisclosure(),\n      Open = _useDisclosure2.isOpen,\n      toOpen = _useDisclosure2.onOpen,\n      Close = _useDisclosure2.onClose;\n\n  var _useDisclosure3 = useDisclosure(),\n      DirectOpen = _useDisclosure3.isOpen,\n      toDirectOpen = _useDisclosure3.onOpen,\n      DirectClose = _useDisclosure3.onClose;\n\n  var _useGetTeamMembersQue = useGetTeamMembersQuery({\n    variables: {\n      teamId: Team.id\n    }\n  }),\n      data = _useGetTeamMembersQue.data,\n      loading = _useGetTeamMembersQue.loading;\n\n  var isOwner = Team.admin; //data.me.id === Team.ownerId\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Teams, {\n      gridColumn: \"1\",\n      gridRow: \"1 / 4\",\n      bg: \"#362234\",\n      color: \"#958993\",\n      teams: AllTeams.map(function (t) {\n        return {\n          id: t.id,\n          name: t.name.charAt(0).toUpperCase()\n        };\n      }) // map return a new array\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Channel, {\n      onInvite: toOpen,\n      gridColumn: \"2\",\n      gridRow: \"1 / 4\",\n      bg: \"#4e3a4c\",\n      color: \"#958993\",\n      teamName: Team.name,\n      username: username,\n      channels: Team.channels,\n      teamId: Team.id,\n      users: Team.directMessageUsers,\n      toOpen: onOpen,\n      isOwner: isOwner,\n      toDirectMessage: toDirectOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ChannelForm, {\n      open: isOpen,\n      toClose: onClose,\n      teamId: Team.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(InvitePeople, {\n      open: Open,\n      toClose: Close,\n      teamId: Team.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(DirectMessageForm, {\n      open: DirectOpen,\n      toClose: DirectClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Sidebar, \"BfcIGtKOdzx2A1RFQ86EoPAMj4I=\", false, function () {\n  return [useDisclosure, useDisclosure, useDisclosure, useGetTeamMembersQuery];\n});\n\n_c = Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/container/Sidebar.tsx"],"names":["useDisclosure","React","Channel","ChannelForm","DirectMessageForm","InvitePeople","Team","Teams","useGetTeamMembersQuery","Sidebar","AllTeams","username","isOpen","onOpen","onClose","Open","toOpen","Close","DirectOpen","toDirectOpen","DirectClose","variables","teamId","id","data","loading","isOwner","admin","map","t","name","charAt","toUpperCase","channels","directMessageUsers"],"mappings":"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","sourcesContent":["import { useDisclosure } from '@chakra-ui/react'\nimport React from 'react'\nimport { Channel } from '../components/channel'\nimport { ChannelForm } from '../components/channelForm'\nimport { DirectMessageForm } from '../components/DirectMessageForm'\nimport { InvitePeople } from '../components/InvitePeople'\nimport { Team as Teams } from '../components/team'\nimport { Team as team, useGetTeamMembersQuery } from '../generated/graphql'\n\ninterface SidebarProps {\n  AllTeams: team[]\n  Team: team\n  username: string\n}\nexport const Sidebar: React.FC<SidebarProps> = ({\n  AllTeams,\n  Team,\n  username,\n}) => {\n  const { isOpen, onOpen, onClose } = useDisclosure() // open and close modal\n  const { isOpen: Open, onOpen: toOpen, onClose: Close } = useDisclosure()\n  const {\n    isOpen: DirectOpen,\n    onOpen: toDirectOpen,\n    onClose: DirectClose,\n  } = useDisclosure()\n  const { data, loading } = useGetTeamMembersQuery({\n    variables: {\n      teamId: Team.id,\n    },\n  })\n  let isOwner = Team.admin //data.me.id === Team.ownerId\n  return (\n    <>\n      <Teams\n        gridColumn=\"1\"\n        gridRow=\"1 / 4\"\n        bg=\"#362234\"\n        color=\"#958993\"\n        teams={AllTeams.map((t) => ({\n          id: t.id,\n          name: t.name.charAt(0).toUpperCase(),\n        }))} // map return a new array\n      />\n\n      <Channel\n        onInvite={toOpen}\n        gridColumn=\"2\"\n        gridRow=\"1 / 4\"\n        bg=\"#4e3a4c\"\n        color=\"#958993\"\n        teamName={Team.name}\n        username={username}\n        channels={Team.channels}\n        teamId={Team.id}\n        users={Team.directMessageUsers}\n        toOpen={onOpen}\n        isOwner={isOwner}\n        toDirectMessage={toDirectOpen}\n      />\n      <ChannelForm open={isOpen} toClose={onClose} teamId={Team.id} />\n      <InvitePeople open={Open} toClose={Close} teamId={Team.id} />\n      <DirectMessageForm open={DirectOpen} toClose={DirectClose} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}