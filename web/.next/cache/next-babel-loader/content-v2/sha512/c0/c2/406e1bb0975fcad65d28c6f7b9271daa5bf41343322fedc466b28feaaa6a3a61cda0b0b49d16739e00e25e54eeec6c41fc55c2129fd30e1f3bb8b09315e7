{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/pages/view-team/[[...id]].tsx\";\n// didn't handle the case for no team\nimport { Box, Input } from '@chakra-ui/react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { Message } from '../../components/Messages';\nimport { Sidebar } from '../../container/Sidebar';\nimport { useAllTeamsQuery, useMeQuery } from '../../generated/graphql';\nimport { withApollo } from '../../utils/withApollo';\nconst CreateTeam = dynamic(() => import('../create-team'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('../create-team')],\n    modules: ['../create-team']\n  }\n});\n\nconst ViewTeam = () => {\n  let teamId, channelId;\n  const router = useRouter();\n\n  if (router.query.id) {\n    teamId = parseInt(router.query.id[0]); // in initial render this will be undefined\n\n    channelId = parseInt(router.query.id[1]);\n  }\n\n  const {\n    data,\n    loading\n  } = useAllTeamsQuery();\n  const {\n    data: user,\n    loading: userLoad\n  } = useMeQuery();\n  const {\n    AllTeams,\n    UserTeams\n  } = data;\n\n  if (loading || userLoad) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n\n  const teams = [...AllTeams, ...UserTeams]; // direct destructing of data cause error\n\n  const Idx = teamId ? teams.indexOf(teams.find(u => u.id === teamId)) : 0;\n  const Team = Idx === -1 ? teams[0] : teams[Idx]; // Idx is -1 if there is no item in allteam with the given ID.\n\n  const channelIdx = channelId ? Team.channels.indexOf(Team.channels.find(u => u.id === channelId)) : 0;\n  let Channel = channelIdx === -1 ? Team.channels[0] : Team.channels[channelIdx];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"grid\",\n    height: \"100vh\",\n    gridTemplateColumns: \"100px 250px 1fr\",\n    gridTemplateRows: \"auto 1fr auto\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      Team: Team,\n      AllTeams: teams,\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), Channel && /*#__PURE__*/_jsxDEV(Box, {\n      gridColumn: \"3\",\n      gridRow: \"1\",\n      textAlign: \"center\",\n      children: [\"#\", Channel.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), Channel && /*#__PURE__*/_jsxDEV(Message, {\n      channelId: channelIdx\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this), Channel && /*#__PURE__*/_jsxDEV(Box, {\n      gridColumn: \"3\",\n      gridRow: \"3\",\n      margin: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: `Message ${Channel.name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(ViewTeam); // [[...test]]  collect everything after base path and turn it into an array","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/pages/view-team/[[...id]].tsx"],"names":["Box","Input","dynamic","useRouter","React","Message","Sidebar","useAllTeamsQuery","useMeQuery","withApollo","CreateTeam","ViewTeam","teamId","channelId","router","query","id","parseInt","data","loading","user","userLoad","AllTeams","UserTeams","teams","Idx","indexOf","find","u","Team","channelIdx","channels","Channel","name","ssr"],"mappings":"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","sourcesContent":["// didn't handle the case for no team\n\nimport { Box, Input } from '@chakra-ui/react'\nimport dynamic from 'next/dynamic'\nimport { useRouter } from 'next/router'\nimport React from 'react'\nimport { Message } from '../../components/Messages'\nimport { Sidebar } from '../../container/Sidebar'\nimport { useAllTeamsQuery, useMeQuery } from '../../generated/graphql'\nimport { withApollo } from '../../utils/withApollo'\nconst CreateTeam: any = dynamic(() => import('../create-team'))\nconst ViewTeam = () => {\n  let teamId, channelId\n  const router = useRouter()\n  if (router.query.id) {\n    teamId = parseInt(router.query.id[0]) // in initial render this will be undefined\n    channelId = parseInt(router.query.id[1])\n  }\n  const { data, loading } = useAllTeamsQuery()\n  const { data: user, loading: userLoad } = useMeQuery()\n  const { AllTeams, UserTeams } = data\n  if (loading || userLoad) {\n    return <Box>loading</Box>\n  }\n  const teams = [...AllTeams, ...UserTeams] // direct destructing of data cause error\n\n  const Idx = teamId ? teams.indexOf(teams.find((u) => u.id === teamId)) : 0\n\n  const Team = Idx === -1 ? teams[0] : teams[Idx] // Idx is -1 if there is no item in allteam with the given ID.\n  const channelIdx = channelId\n    ? Team.channels.indexOf(Team.channels.find((u) => u.id === channelId))\n    : 0\n  let Channel = channelIdx === -1 ? Team.channels[0] : Team.channels[channelIdx]\n\n  return (\n    <Box\n      display=\"grid\"\n      height=\"100vh\"\n      gridTemplateColumns=\"100px 250px 1fr\"\n      gridTemplateRows=\"auto 1fr auto\"\n    >\n      <Sidebar Team={Team} AllTeams={teams} user={user} />\n      {Channel && (\n        <Box gridColumn=\"3\" gridRow=\"1\" textAlign=\"center\">\n          #{Channel.name}\n        </Box>\n      )}\n      {Channel && <Message channelId={channelIdx} />}\n      {Channel && (\n        <Box gridColumn=\"3\" gridRow=\"3\" margin=\"20px\">\n          <Input type=\"text\" placeholder={`Message ${Channel.name}`} />\n        </Box>\n      )}\n    </Box>\n  )\n}\nexport default withApollo({ ssr: false })(ViewTeam)\n\n// [[...test]]  collect everything after base path and turn it into an array\n"]},"metadata":{},"sourceType":"module"}