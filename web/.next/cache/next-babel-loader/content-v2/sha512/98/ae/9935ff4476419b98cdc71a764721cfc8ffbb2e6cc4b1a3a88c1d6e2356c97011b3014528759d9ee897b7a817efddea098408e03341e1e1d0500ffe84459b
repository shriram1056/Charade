{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/pages/register.tsx\";\nimport { Formik } from 'formik';\nimport React from 'react';\nimport { Wrapper } from '../components/Wrapper';\nimport { useCreateUserMutation } from '../generated/graphql';\nimport { withApollo } from '../utils/withApollo';\n\nconst Register = ({}) => {\n  const [register] = useCreateUserMutation();\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        email: '',\n        username: '',\n        password: ''\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {\n        const response = await register({\n          variables: {\n            username: values.username,\n            password: values.password,\n            email: values.email\n          }\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\nexport default withApollo({\n  ssr: false\n})(Register);","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/pages/register.tsx"],"names":["Formik","React","Wrapper","useCreateUserMutation","withApollo","Register","register","email","username","password","values","setErrors","response","variables","ssr"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AACA,SAASC,UAAT,QAA2B,qBAA3B;;AAEA,MAAMC,QAAsB,GAAG,CAAC,EAAD,KAAQ;AACrC,QAAM,CAACC,QAAD,IAAaH,qBAAqB,EAAxC;AAEA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEI,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE,EAAvB;AAA2BC,QAAAA,QAAQ,EAAE;AAArC,OADjB;AAEE,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,QAAAA;AAAF,OAAf,KAAiC;AACzC,cAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAAC;AAC9BO,UAAAA,SAAS,EAAE;AACTL,YAAAA,QAAQ,EAAEE,MAAM,CAACF,QADR;AAETC,YAAAA,QAAQ,EAAEC,MAAM,CAACD,QAFR;AAGTF,YAAAA,KAAK,EAAEG,MAAM,CAACH;AAHL;AADmB,SAAD,CAA/B;AAOD;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnBD;;AAoBA,eAAeH,UAAU,CAAC;AAAEU,EAAAA,GAAG,EAAE;AAAP,CAAD,CAAV,CAA2BT,QAA3B,CAAf","sourcesContent":["import { Formik } from 'formik'\nimport React from 'react'\nimport { Wrapper } from '../components/Wrapper'\nimport { useCreateUserMutation } from '../generated/graphql'\nimport { withApollo } from '../utils/withApollo'\n\nconst Register: React.FC<{}> = ({}) => {\n  const [register] = useCreateUserMutation()\n\n  return (\n    <Wrapper>\n      <Formik\n        initialValues={{ email: '', username: '', password: '' }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await register({\n            variables: {\n              username: values.username,\n              password: values.password,\n              email: values.email,\n            },\n          })\n        }}\n      ></Formik>\n    </Wrapper>\n  )\n}\nexport default withApollo({ ssr: false })(Register)\n"]},"metadata":{},"sourceType":"module"}