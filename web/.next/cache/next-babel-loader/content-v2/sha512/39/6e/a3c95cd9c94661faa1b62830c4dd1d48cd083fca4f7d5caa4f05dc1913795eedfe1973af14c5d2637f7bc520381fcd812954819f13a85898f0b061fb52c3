{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/SendMessage.tsx\";\nimport { Box, Button } from '@chakra-ui/react';\nimport { Form, Formik } from 'formik';\nimport React from 'react';\nimport { InputField } from './InputField';\nexport const SendMessage = ({\n  name,\n  onSubmit\n}) => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    gridColumn: \"3\",\n    gridRow: \"3\",\n    backgroundColor: \"#e6e6e6\",\n    display: \"flex\",\n    alignItems: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      flex: \"1 0\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          message: ''\n        },\n        onSubmit: async (values, {\n          setErrors,\n          setSubmitting,\n          resetForm\n        }) => {\n          if (!values.message || !values.message.trim()) {\n            //trim to remove the white spaces\n            setSubmitting(false);\n            return;\n          }\n\n          const response = onSubmit(values.message);\n          resetForm();\n        },\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            padding: \"20px\",\n            paddingLeft: \"0\",\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              placeholder: `message-${name}`,\n              channel: true,\n              name: \"message\",\n              backgroundColor: \"#bfbfbf\",\n              _placeholder: {\n                color: 'black'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              backgroundColor: \"black\",\n              color: \"white\",\n              isLoading: isSubmitting //     onClick={isSubmitting ? null : toClose}\n              ,\n              children: \"Send\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/SendMessage.tsx"],"names":["Box","Button","Form","Formik","React","InputField","SendMessage","name","onSubmit","message","values","setErrors","setSubmitting","resetForm","trim","response","isSubmitting","color"],"mappings":";;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAMA,OAAO,MAAMC,WAAuC,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AAC7E,sBACE,QAAC,GAAD;AACE,IAAA,UAAU,EAAC,GADb;AAEE,IAAA,OAAO,EAAC,GAFV;AAGE,IAAA,eAAe,EAAC,SAHlB;AAIE,IAAA,OAAO,EAAC,MAJV;AAKE,IAAA,UAAU,EAAC,QALb;AAAA,2BAOE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAC,KAAV;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,aAAa,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SADjB;AAEE,QAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,UAAAA,SAAF;AAAaC,UAAAA,aAAb;AAA4BC,UAAAA;AAA5B,SAAf,KAA2D;AACnE,cAAI,CAACH,MAAM,CAACD,OAAR,IAAmB,CAACC,MAAM,CAACD,OAAP,CAAeK,IAAf,EAAxB,EAA+C;AAC7C;AACAF,YAAAA,aAAa,CAAC,KAAD,CAAb;AACA;AACD;;AACD,gBAAMG,QAAQ,GAAGP,QAAQ,CAACE,MAAM,CAACD,OAAR,CAAzB;AACAI,UAAAA,SAAS;AACV,SAVH;AAAA,kBAYG,CAAC;AAAEG,UAAAA;AAAF,SAAD,kBACC,QAAC,IAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,OAAO,EAAC,MAAb;AAAoB,YAAA,OAAO,EAAC,MAA5B;AAAmC,YAAA,WAAW,EAAC,GAA/C;AAAA,oCACE,QAAC,UAAD;AACE,cAAA,WAAW,EAAG,WAAUT,IAAK,EAD/B;AAEE,cAAA,OAAO,EAAE,IAFX;AAGE,cAAA,IAAI,EAAC,SAHP;AAIE,cAAA,eAAe,EAAC,SAJlB;AAKE,cAAA,YAAY,EAAE;AAAEU,gBAAAA,KAAK,EAAE;AAAT;AALhB;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,eAAe,EAAC,OAFlB;AAGE,cAAA,KAAK,EAAC,OAHR;AAIE,cAAA,SAAS,EAAED,YAJb,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAbJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADF;AA+CD,CAhDM","sourcesContent":["import { Box, Button } from '@chakra-ui/react'\nimport { Form, Formik } from 'formik'\nimport React from 'react'\nimport { InputField } from './InputField'\ninterface SendMessageProps {\n  name: string\n  onSubmit: Function\n}\n\nexport const SendMessage: React.FC<SendMessageProps> = ({ name, onSubmit }) => {\n  return (\n    <Box\n      gridColumn=\"3\"\n      gridRow=\"3\"\n      backgroundColor=\"#e6e6e6\"\n      display=\"flex\"\n      alignItems=\"center\"\n    >\n      <Box flex=\"1 0\">\n        <Formik\n          initialValues={{ message: '' }}\n          onSubmit={async (values, { setErrors, setSubmitting, resetForm }) => {\n            if (!values.message || !values.message.trim()) {\n              //trim to remove the white spaces\n              setSubmitting(false)\n              return\n            }\n            const response = onSubmit(values.message)\n            resetForm()\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Box display=\"flex\" padding=\"20px\" paddingLeft=\"0\">\n                <InputField\n                  placeholder={`message-${name}`}\n                  channel={true}\n                  name=\"message\"\n                  backgroundColor=\"#bfbfbf\"\n                  _placeholder={{ color: 'black' }}\n                />\n                <Button\n                  type=\"submit\"\n                  backgroundColor=\"black\"\n                  color=\"white\"\n                  isLoading={isSubmitting}\n                  //     onClick={isSubmitting ? null : toClose}\n                >\n                  Send\n                </Button>\n              </Box>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Box>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}