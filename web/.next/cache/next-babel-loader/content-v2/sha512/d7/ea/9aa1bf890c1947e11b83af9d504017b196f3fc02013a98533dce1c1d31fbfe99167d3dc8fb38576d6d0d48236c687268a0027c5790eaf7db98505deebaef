{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/team.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Box } from '@chakra-ui/react';\nimport React from 'react'; // interface ChannelProps extends GridProps {\n//   teamName: string\n//   channels: Channels[]\n//   users: Users[]\n//   username: string\n// }\n\n// const team = ({ id, name }) => <ListItem key={`team-${id}`}>{name}</ListItem>\nexport const Team = (_ref) => {\n  let props = Object.assign({}, _ref);\n  return /*#__PURE__*/_jsxDEV(Box, _objectSpread({}, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 10\n  }, this);\n};","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/team.tsx"],"names":["Box","React","Team","props"],"mappings":";;;;;;;;;AAAA,SAASA,GAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AAEA,OAAO,MAAMC,IAA4B,GAAG,UAAkB;AAAA,MAAZC,KAAY;AAC5D,sBAAO,QAAC,GAAD,oBAASA,KAAT;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFM","sourcesContent":["import { Box, GridProps } from '@chakra-ui/react'\nimport React from 'react'\n\n// interface ChannelProps extends GridProps {\n//   teamName: string\n//   channels: Channels[]\n//   users: Users[]\n//   username: string\n// }\n\ntype ChannelProps = GridProps\n// const team = ({ id, name }) => <ListItem key={`team-${id}`}>{name}</ListItem>\n\nexport const Team: React.FC<ChannelProps> = ({ ...props }) => {\n  return <Box {...props}>{/* <ListItem>{teams.map(team)}</ListItem> */}</Box>\n}\n"]},"metadata":{},"sourceType":"module"}