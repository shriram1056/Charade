{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nimport { useMeQuery } from '../generated/graphql';\nexport var useIsAuth = function useIsAuth() {\n  _s();\n\n  var _useMeQuery = useMeQuery(),\n      data = _useMeQuery.data,\n      loading = _useMeQuery.loading; //after loading is set to false both data or error is retrieved\n\n\n  console.log(data);\n  var router = useRouter();\n  useEffect(function () {\n    if (!(data !== null && data !== void 0 && data.me) && !loading) {\n      router.push('/login?next=' + router.pathname); // give current path name. '?' is the symbol for query, can be accessed by router.query.next\n    }\n  }, [data, loading]); //runs after the data or loading are assigned.but both data and loading are assigned at the same time\n};\n\n_s(useIsAuth, \"HFzD9whMdVlJlXTSiGTGw6bEFlE=\", false, function () {\n  return [useMeQuery, useRouter];\n});","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/utils/useIsAuth.ts"],"names":["useRouter","useEffect","useMeQuery","useIsAuth","data","loading","console","log","router","me","push","pathname"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,oBACHD,UAAU,EADP;AAAA,MACrBE,IADqB,eACrBA,IADqB;AAAA,MACfC,OADe,eACfA,OADe,EAE7B;;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,MAAMI,MAAM,GAAGR,SAAS,EAAxB;AACAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,EAACG,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEK,EAAP,KAAa,CAACJ,OAAlB,EAA2B;AACzBG,MAAAA,MAAM,CAACE,IAAP,CAAY,iBAAiBF,MAAM,CAACG,QAApC,EADyB,CACqB;AAC/C;AACF,GAJQ,EAIN,CAACP,IAAD,EAAOC,OAAP,CAJM,CAAT,CAL6B,CAU7B;AACD,CAXM;;GAAMF,S;UACeD,U,EAGXF,S","sourcesContent":["import { useRouter } from 'next/router'\nimport { useEffect } from 'react'\nimport { useMeQuery } from '../generated/graphql'\n\nexport const useIsAuth = () => {\n  const { data, loading } = useMeQuery()\n  //after loading is set to false both data or error is retrieved\n  console.log(data)\n  const router = useRouter()\n  useEffect(() => {\n    if (!data?.me && !loading) {\n      router.push('/login?next=' + router.pathname) // give current path name. '?' is the symbol for query, can be accessed by router.query.next\n    }\n  }, [data, loading])\n  //runs after the data or loading are assigned.but both data and loading are assigned at the same time\n}\n"]},"metadata":{},"sourceType":"module"}