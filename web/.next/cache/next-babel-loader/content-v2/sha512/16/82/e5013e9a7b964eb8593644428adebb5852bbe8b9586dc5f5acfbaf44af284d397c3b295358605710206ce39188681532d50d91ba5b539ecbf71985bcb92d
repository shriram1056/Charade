{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/shriram/Downloads/slack clone/web/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/shriram/Downloads/slack clone/web/src/components/multipleUser.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { CUIAutoComplete } from 'chakra-ui-autocomplete';\nimport React from 'react';\nexport var MultipleUser = function MultipleUser(_ref) {\n  _s();\n\n  var data = _ref.data,\n      loading = _ref.loading;\n\n  if (loading) {\n    return null;\n  }\n\n  var getTeamMembers = data.getTeamMembers;\n\n  var _React$useState = React.useState(data),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pickerItems = _React$useState2[0],\n      setPickerItems = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedItems = _React$useState4[0],\n      setSelectedItems = _React$useState4[1];\n\n  var handleCreateItem = function handleCreateItem(item) {\n    setPickerItems(function (curr) {\n      return [].concat(_toConsumableArray(curr), [item]);\n    });\n    setSelectedItems(function (curr) {\n      return [].concat(_toConsumableArray(curr), [item]);\n    });\n  };\n\n  var handleSelectedItemsChange = function handleSelectedItemsChange(selectedItems) {\n    if (selectedItems) {\n      setSelectedItems(selectedItems);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CUIAutoComplete, {\n    label: \"Select channel members\",\n    placeholder: \"select users\",\n    onCreateItem: handleCreateItem,\n    items: pickerItems,\n    selectedItems: selectedItems,\n    onSelectedItemsChange: function onSelectedItemsChange(changes) {\n      return handleSelectedItemsChange(changes.selectedItems);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(MultipleUser, \"N1Up4Vx2+4iP+OL9sieXvjaZS7Q=\");\n\n_c = MultipleUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleUser\");","map":{"version":3,"sources":["/home/shriram/Downloads/slack clone/web/src/components/multipleUser.tsx"],"names":["CUIAutoComplete","React","MultipleUser","data","loading","getTeamMembers","useState","pickerItems","setPickerItems","selectedItems","setSelectedItems","handleCreateItem","item","curr","handleSelectedItemsChange","changes"],"mappings":";;;;;;;;AAAA,SAASA,eAAT,QAAgC,wBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAMA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAuB;AAAA;;AAAA,MAApBC,IAAoB,QAApBA,IAAoB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AACjD,MAAIA,OAAJ,EAAa;AACX,WAAO,IAAP;AACD;;AAHgD,MAIzCC,cAJyC,GAItBF,IAJsB,CAIzCE,cAJyC;;AAAA,wBAKXJ,KAAK,CAACK,QAAN,CAAeH,IAAf,CALW;AAAA;AAAA,MAK1CI,WAL0C;AAAA,MAK7BC,cAL6B;;AAAA,yBAMPP,KAAK,CAACK,QAAN,CAAsB,EAAtB,CANO;AAAA;AAAA,MAM1CG,aAN0C;AAAA,MAM3BC,gBAN2B;;AAQjD,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAe;AACtCJ,IAAAA,cAAc,CAAC,UAACK,IAAD;AAAA,0CAAcA,IAAd,IAAoBD,IAApB;AAAA,KAAD,CAAd;AACAF,IAAAA,gBAAgB,CAAC,UAACG,IAAD;AAAA,0CAAcA,IAAd,IAAoBD,IAApB;AAAA,KAAD,CAAhB;AACD,GAHD;;AAKA,MAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACL,aAAD,EAA2B;AAC3D,QAAIA,aAAJ,EAAmB;AACjBC,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD;AACF,GAJD;;AAMA,sBACE,QAAC,eAAD;AACE,IAAA,KAAK,EAAC,wBADR;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,YAAY,EAAEE,gBAHhB;AAIE,IAAA,KAAK,EAAEJ,WAJT;AAKE,IAAA,aAAa,EAAEE,aALjB;AAME,IAAA,qBAAqB,EAAE,+BAACM,OAAD;AAAA,aACrBD,yBAAyB,CAACC,OAAO,CAACN,aAAT,CADJ;AAAA;AANzB;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CA/BM;;GAAMP,Y;;KAAAA,Y","sourcesContent":["import { CUIAutoComplete } from 'chakra-ui-autocomplete'\nimport React from 'react'\ninterface MultipleUserProps {\n  data: any\n  loading: boolean\n}\n\nexport const MultipleUser = ({ data, loading }) => {\n  if (loading) {\n    return null\n  }\n  const { getTeamMembers } = data\n  const [pickerItems, setPickerItems] = React.useState(data)\n  const [selectedItems, setSelectedItems] = React.useState<any[]>([])\n\n  const handleCreateItem = (item: any) => {\n    setPickerItems((curr) => [...curr, item])\n    setSelectedItems((curr) => [...curr, item])\n  }\n\n  const handleSelectedItemsChange = (selectedItems?: any[]) => {\n    if (selectedItems) {\n      setSelectedItems(selectedItems)\n    }\n  }\n\n  return (\n    <CUIAutoComplete\n      label=\"Select channel members\"\n      placeholder=\"select users\"\n      onCreateItem={handleCreateItem}\n      items={pickerItems}\n      selectedItems={selectedItems}\n      onSelectedItemsChange={(changes) =>\n        handleSelectedItemsChange(changes.selectedItems)\n      }\n    />\n  )\n}\n"]},"metadata":{},"sourceType":"module"}