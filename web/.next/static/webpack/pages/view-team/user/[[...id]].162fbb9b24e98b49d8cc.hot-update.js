webpackHotUpdate_N_E("pages/view-team/user/[[...id]]",{

/***/ "./src/utils/withApollo.ts":
/*!*********************************!*\
  !*** ./src/utils/withApollo.ts ***!
  \*********************************/
/*! exports provided: subscriptionClient, withApollo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"subscriptionClient\", function() { return subscriptionClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"withApollo\", function() { return withApollo; });\n/* harmony import */ var _home_shriram_Downloads_slack_clone_web_node_modules_next_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _home_shriram_Downloads_slack_clone_web_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty */ \"./node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty.js\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @apollo/client */ \"./node_modules/@apollo/client/index.js\");\n/* harmony import */ var _apollo_client_link_ws__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @apollo/client/link/ws */ \"./node_modules/@apollo/client/link/ws/index.js\");\n/* harmony import */ var _apollo_client_utilities__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @apollo/client/utilities */ \"./node_modules/@apollo/client/utilities/index.js\");\n/* harmony import */ var apollo_upload_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! apollo-upload-client */ \"./node_modules/apollo-upload-client/public/index.mjs\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! js-cookie */ \"./node_modules/js-cookie/src/js.cookie.js\");\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(js_cookie__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_apollo__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next-apollo */ \"./node_modules/next-apollo/dist/index.es.js\");\n/* harmony import */ var subscriptions_transport_ws__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! subscriptions-transport-ws */ \"./node_modules/subscriptions-transport-ws/dist/client.js\");\n/* harmony import */ var subscriptions_transport_ws__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(subscriptions_transport_ws__WEBPACK_IMPORTED_MODULE_8__);\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { Object(_home_shriram_Downloads_slack_clone_web_node_modules_next_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\n\n\n\n// this import is for forwarding the cookie\n\n\n// subscription connect as soon as i load the page.so, lazy true only reconnect it on subscription trigger\n//but we also reconnect on login\nvar subscriptionClient = true ? new subscriptions_transport_ws__WEBPACK_IMPORTED_MODULE_8__[\"SubscriptionClient\"]('ws://localhost:4001/subscriptions', {\n  // automatic reconnect in case of connection error\n  reconnect: true,\n  // THE MOST IMPORTANT THING, DON'T EVER CHANGE THE VALUE OF CONNECTION PARAMS TO PLAIN OBJECT, USE FUNCTION\n  //FUNCTION FETCH VALUES EVERYTIME INSTEAD OF READING NOT UPDATED COOKIE VALUE IN VARIABLES\n  connectionParams: function connectionParams() {\n    return {\n      //object that will be available as first argument of onConnect (in server side), if passed a function - it will call it and send the return value\n      authToken: {\n        Rtoken: js_cookie__WEBPACK_IMPORTED_MODULE_6___default.a.get('refresh-token'),\n        Atoken: js_cookie__WEBPACK_IMPORTED_MODULE_6___default.a.get('access-token')\n      }\n    };\n  },\n  lazy: true\n}) : undefined; // ctx can be undefined in ssr:false, so we need optional\n\nvar createClient = function createClient(ctx) // ctx for forwarding cookie in ssr\n{\n  var _ctx$req;\n\n  var httpLink = new apollo_upload_client__WEBPACK_IMPORTED_MODULE_5__[\"createUploadLink\"]({\n    uri: 'http://localhost:4001/graphql',\n    credentials: 'include',\n    //Apollo Client can include user credentials (basic auth, cookies, etc.) in the HTTP requests it makes to a GraphQL server. By default, credentials are included only if the server is hosted at the same origin as the application using Apollo Client.also, set credentials to true in cors package in express\n    headers: {\n      cookie: (false ? undefined : undefined) || ''\n    }\n  }); //WebSocket is a property that exists only in the browser\n\n  var wsLink = true ? new _apollo_client_link_ws__WEBPACK_IMPORTED_MODULE_3__[\"WebSocketLink\"](subscriptionClient) : undefined;\n  var splitLink = true ? Object(_apollo_client__WEBPACK_IMPORTED_MODULE_2__[\"split\"])(function (_ref) {\n    var query = _ref.query;\n    var definition = Object(_apollo_client_utilities__WEBPACK_IMPORTED_MODULE_4__[\"getMainDefinition\"])(query);\n    return definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\n  }, wsLink, httpLink) : undefined; // this should be http link becuase in server, we use http and in client we use both http and sockets\n\n  return new _apollo_client__WEBPACK_IMPORTED_MODULE_2__[\"ApolloClient\"]({\n    link: splitLink,\n    //link option, it takes precedence over the uri option (uri sets up a default HTTP link chain using the provided URL).\n    cache: new _apollo_client__WEBPACK_IMPORTED_MODULE_2__[\"InMemoryCache\"]({\n      typePolicies: {\n        Query: {\n          fields: {\n            DirectMessages: {\n              keyArgs: [],\n              //// cache based on args of query\n              merge: function merge(existing, incoming) {\n                var _existing$Messages$, _incoming$Messages$, _existing$Messages$2, _incoming$Messages$2;\n\n                if (!existing) {\n                  //there won't be any cache on the first query\n                  return incoming;\n                }\n\n                console.log('fuck', existing, 'ddf', incoming);\n\n                if (((_existing$Messages$ = existing.Messages[0]) === null || _existing$Messages$ === void 0 ? void 0 : _existing$Messages$.__ref) === ((_incoming$Messages$ = incoming.Messages[0]) === null || _incoming$Messages$ === void 0 ? void 0 : _incoming$Messages$.__ref)) {\n                  return incoming; // when the useMessagesQuery make an another request due to fetch-policy\n                  // fetch policy make sure we don't read from cache\n                }\n\n                if (((_existing$Messages$2 = existing.Messages[0]) === null || _existing$Messages$2 === void 0 ? void 0 : _existing$Messages$2.__ref) === ((_incoming$Messages$2 = incoming.Messages[1]) === null || _incoming$Messages$2 === void 0 ? void 0 : _incoming$Messages$2.__ref)) {\n                  return incoming; // when subscription updates cache.incoming updated cache\n                }\n\n                return _objectSpread(_objectSpread({}, incoming), {}, {\n                  Messages: [].concat(Object(_home_shriram_Downloads_slack_clone_web_node_modules_next_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(existing.Messages), Object(_home_shriram_Downloads_slack_clone_web_node_modules_next_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(incoming.Messages))\n                }); //in the first query existing will be empty\n              }\n            },\n            Messages: {\n              keyArgs: [],\n              //// cache based on args of query\n              merge: function merge(existing, incoming) {\n                var _existing$Messages$3, _incoming$Messages$3, _existing$Messages$4, _incoming$Messages$4;\n\n                if (!existing) {\n                  //there won't be any cache on the first query\n                  return incoming;\n                }\n\n                if (((_existing$Messages$3 = existing.Messages[0]) === null || _existing$Messages$3 === void 0 ? void 0 : _existing$Messages$3.__ref) === ((_incoming$Messages$3 = incoming.Messages[0]) === null || _incoming$Messages$3 === void 0 ? void 0 : _incoming$Messages$3.__ref)) {\n                  return incoming; // when the useMessagesQuery make an another request due to fetch-policy\n                  // fetch policy make sure we don't read from cache\n                }\n\n                if (((_existing$Messages$4 = existing.Messages[0]) === null || _existing$Messages$4 === void 0 ? void 0 : _existing$Messages$4.__ref) === ((_incoming$Messages$4 = incoming.Messages[1]) === null || _incoming$Messages$4 === void 0 ? void 0 : _incoming$Messages$4.__ref)) {\n                  return incoming; // when subscription updates cache.incoming updated cache\n                } //  console.log('fuck', existing, 'ddf', incoming)\n\n\n                return _objectSpread(_objectSpread({}, incoming), {}, {\n                  Messages: [].concat(Object(_home_shriram_Downloads_slack_clone_web_node_modules_next_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(existing.Messages), Object(_home_shriram_Downloads_slack_clone_web_node_modules_next_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(incoming.Messages))\n                }); //in the first query existing will be empty\n              }\n            }\n          }\n        }\n      }\n    }),\n    ssrMode: false // Disables forceFetch on the server (so queries are only run once)\n\n  });\n};\n\nvar withApollo = Object(next_apollo__WEBPACK_IMPORTED_MODULE_7__[\"withApollo\"])(createClient); //createWithApollo takes a ApolloClient<NormalizedCacheObject> | ((ctx?: NextPageContext) => ApolloClient<NormalizedCacheObject>); your createClient is of type (ctx: NextPageContext) => ApolloClient<NormalizedCacheObject>\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utils/withApollo.ts\n");

/***/ })

})